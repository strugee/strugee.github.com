<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[strugee.net blog - March - 2017]]></title><description><![CDATA[strugee.net blog - March - 2017]]></description><link>https://strugee.net/blog/2017/03</link><generator>stratic-indexes-to-rss</generator><lastBuildDate>Mon, 26 Feb 2018 04:23:30 GMT</lastBuildDate><atom:link href="https://strugee.net/blog/2017/03/index.rss" rel="self" type="application/rss+xml"/><copyright><![CDATA[Â© Copyright 2012-2018 AJ Jordan. Available under the GNU Affero GPL.]]></copyright><webMaster><![CDATA[AJ Jordan <alex@strugee.net>]]></webMaster><item><title><![CDATA[Getting on board with configuration management]]></title><description><![CDATA[<p>For a long while I've really disliked configuration management. This mostly stemmed from my experience <a href="https://github.com/strugee/steevie/blob/3069f53ee82c6b1709f22285b71ccdc0e5e0bced/apache-config/apache-config.pp">managing Apache via Puppet</a>, which I found indirect and unnecessary - the only reason I did this was basically to get version control. In fact, I even started a project called <a href="https://github.com/strugee/bindslash">bindslash</a> which I literally described as "not configuration management".</p>
<p>However, last Thursday, steevie (my primary server) crashed <em>again</em>. So I went into a fallback DigitalOcean VM I'd set up the last time this had happened and updated stuff. I presented my <a href="https://strugee.net/presentation-pumpio/libreplanet/">LibrePlanet slides</a> from that. And eventually I bit the bullet and set up a secondary email server which, to my great surprise, has not received a flood of spam yet (though I'm sure it will at some point).</p>
<p>The whole ordeal really made me understand the benefit of configuration management. I would've spent less time and been less stressed if I could just plug in a config management system to get a useful failover system. So as of today, I'm on board with configuration management, and bindslash is dead.</p>
<p>I still kinda hate Puppet, so I think I'll try out Ansible and <em>maybe</em> Chef. Ansible's agentless model in particular probably makes a lot of sense for my needs. It also makes me sad to kill bindslash, since I still think it would be a useful project and there's definitely a place for it in the world. But I no longer have any reason to work on it, so I'm just going to stop pretending I'll ever finish it. If anyone is interested in that approach, talk to me and I'll happily give you the name, the repo, my thoughts on its design, etc.</p>
<p>Anyway. Now to set up outbound mail on the failover VM.</p>
<p>*big sigh*</p>
]]></description><link>https://strugee.net/blog/2017/03/getting-on-board-with-configuration-management</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/getting-on-board-with-configuration-management</guid><category><![CDATA[development]]></category><category><![CDATA[sysadmin]]></category><category><![CDATA[blaggregator]]></category><pubDate>Tue, 28 Mar 2017 16:59:56 GMT</pubDate></item><item><title><![CDATA[RC week 11]]></title><description><![CDATA[<p>This is week 11 of being at the <a href="https://recurse.com">Recurse Center</a>. </p>
<script async="" defer="" src="https://www.recurse-scout.com/loader.js?t=3d49e64361d4b897ffd2fd56dcd93ca4"></script>
<h2>Day 7</h2>
<p>Arrived ~13:30, departed ~22:45, total time at RC 9h15m.</p>
<p>Brought in cookies and spent a lot of time discussing things on Zulip, honestly. Also figured out when I'm teaching things for Web Dev 101. Spent most of the day, however, writing about <a href="https://strugee.net/blog/2017/03/default-secure-systems">default-secure systems</a>.</p>
<h2>Day 8</h2>
<p>Arrived ~16:15, departed ~21:00, total time at RC 4h45m.</p>
<p>Arrived super late today because I woke up in the morning, saw the blizzard outside my window, and said "hell no." When I <em>did</em> go in, the blizzard was still going, so I put on snow pants, snow boots, a thick sweater and my winter jacket, and my hat and gloves. Which took a while.</p>
<p>Spent some time discussing 10 different reasons not to put arsenic in the milk with <a href="https://jmeggesto.github.io/">Jackie</a> and <a href="https://github.com/andrewrk">Andrew</a>, which she later wrote a blog post about <a href="https://jmeggesto.github.io/blog/2017/03/poisonmilk">here</a>. Spent the rest of the day doing <a href="https://github.com/straticjs/RFCs/issues/2">maintenance</a> on some Stratic modules. Also spent a little time on the phone with my dad diagnosing my server's disk problems. I had him reseat the SATA cables, with no effect, unfortunately.</p>
<h2>Day 9</h2>
<p>Arrived ~12:15, departed ~23:25, total time at RC 11h10m.</p>
<p>Didn't do a lot of new stuff, but took care of some miscellaneous business. In particular I did some work on polishing <a href="https://github.com/hubot-scripts/hubot-seen">hubot-seen</a>, including putting out a 1.0.0 release (and then a 1.0.1 release when that turned out to have broken the world). In the evening, <em>finally</em> found the bug preventing us from upgrading pump.io to Express 4.x, which was unbelievably satisfying. Turned out that the bug was in some test code, not the application itself, and so I had been misreading the stack trace for <em>months</em>. (The top item was a test file, but I incorrectly assumed that that was just some test code invoking a bunch of internal stuff. Nope.) Also has a meeting with some of the other Winter 1s about feelings and the end of the batch and stuff.</p>
<p>Last but not least, caught up on weekly blogging. (I've been really bad for a while now...)</p>
<h2>Day 10</h2>
<p>Arrived ~11:45, departed ~00:00, total time at RC 12h15m.</p>
<p>Did a ton of pump.io work. I merged the Express 4.x branch, then went in and did a bunch of other more minor dependency upgrades. Also went to a soldering workshop run by <a href="https://github.com/eeclaire">Claire</a> immediately before presenting HTTPS Part 2 in the afternoon.</p>
<p>In the evening, went to presentations and then game night, where I spent the entire time playing poker. I put in $3 and got back $7.95 (read: $8). Sick.</p>
<h2>Friday</h2>
<p>Arrived ~13:30, departed ~21:45, total time at RC 8h15m. As always, Friday doesn't count as a day because RC is technically not in session.</p>
<p>Did some work on improving pump.io's dependency situation. The result is a system that is very, very close to being 100% up-to-date, which I'm <em>super</em> proud of to be honest. That also let me turn on dependency security monitoring through <a href="https://nodesecurity.io/orgs/pumpio/projects/32213bb8-f9a6-4dd0-8fc6-5caa8ea5f8fc">Node Security Platform</a>, with plans to enable <a href="https://greenkeeper.io">Greenkeeper</a> as well. Had the monthly meeting in the middle of all that which went really well and was very productive.</p>
<p>In the evening, went to Bottle Share, then put pump.io on the Linux Foundation's <a href="https://bestpractices.coreinfrastructure.org">best practices badge app</a>, the result of which you can find <a href="https://bestpractices.coreinfrastructure.org/projects/804">here</a>.</p>
<h2>Executive summary</h2>
<p>Well, I got a lot done on pump.io (and Stratic) this week. So it was relatively productive. But I did basically nothing that was personally productive (i.e. that pushed me forward as a programmer). Hopefully next week will go better.</p>
<p>Total time at RC 45 hours 40 minutes; cumulative time 510 hours 30 minutes.</p>
]]></description><link>https://strugee.net/blog/2017/03/rc-week-11</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/rc-week-11</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 20 Mar 2017 22:49:25 GMT</pubDate></item><item><title><![CDATA[Express 4.x in pump.io core]]></title><description><![CDATA[<p>So I thought I'd take a moment to announce that the upgrade from Express 2.x to Express 4.x is <a href="https://github.com/pump-io/pump.io/pull/1208">finally complete</a>! I fixed up the last couple test failures last Wednesday, and the branch got merged on Thursday.</p>
<h1>A long time coming</h1>
<p>Believe it or not, the work to do this upgrade started almost an entire <em>year</em> ago. Express 2.x has been outdated and unmaintained for a long time now, so upgrading has been a high priority. However, it wasn't as simple as adjusting a version number - there were a staggering number of changes that needed to be made due to Express deprecating, removing, and changing things around. One of the most significant problems was the fact that the old template system that we used, utml, was not compatible with Express 3.x and above. That meant that we had to rewrite every single template into a modern language - an effort that resulted in <a href="https://github.com/pump-io/pump.io/pull/1170">over a thousand lines changed</a>!</p>
<p>However, the time for Express 4.x has finally arrived. With that and some other trivial version bumps, I'm proud to announce that pump.io is fully up-to-date in terms of dependencies with only three, non-critical exceptions. Whooooo!</p>
<h1>Immediate benefits</h1>
<p>There are a lot of reasons this is immediately awesome:</p>
<ol>
<li>Express 4.x fixes significant performance problems that existed in Express 3.x</li>
<li>Relatedly, Express 4.x fixes some security problems present in 3.x</li>
<li>The fact that our dependencies are <em>finally</em> up-to-date means that we can (and do!) now make use of <a href="https://greenkeeper.io/">Greenkeeper</a> and the <a href="https://nodesecurity.io/orgs/pumpio/projects/32213bb8-f9a6-4dd0-8fc6-5caa8ea5f8fc">Node Security Platform</a> to automatically track dependencies to make sure they're up-to-date and not introducing security vulnerabilities</li>
</ol>
<p>That last one is particularly significant. Greenkeeper and NSP will continuously monitor the project's dependencies and automate away a lot of the pain that's associated with keeping pump.io up-to-date. Everyone will get a more secure and stable codebase because of this setup.</p>
<h1>Looking forward</h1>
<p>The Express 4.x upgrade is a big change, and it's definitely possible that stuff has broken. We want to make sure that breakage doesn't make it into production. This change went into pump.io 4.0, which will go through our normal <a href="https://github.com/pump-io/pump.io/wiki/Release-cycle">release cycle</a>. That means it'll be in beta for a month before being released. As a part of that, <a href="https://jxself.org/">Jason Self</a> - who's kind enough to administer <a href="https://datamost.com/">Datamost</a> - has agreed to have a test day where Datamost upgrades to the beta for a day, then downgrade it again. This test day will give us much wider exposure than we would've gotten otherwise, which will be incredibly valuable feedback in the effort to identify and fix regressions. We haven't set a date yet, but if you'd like to join Jason in helping us find bugs, please get in touch with <a href="https://github.com/pump-io/pump.io/wiki/Community">the community</a>. We'd love your help.</p>
<p>Beyond the immediate release, though, there's still things to look forward to. Express 4.x gives us a better way to structure routing code, and a refactor to use this structure <a href="https://github.com/pump-io/pump.io/issues/1232">is planned</a>. There's a lot of room for improvement. But really, the most important benefit is this: technical debt is a far less pressing issue than before. That means that we can shift focus and spend more time fixing user-facing bugs, adding useful features, and generally improving the experience for our users. I couldn't be more excited.</p>
]]></description><link>https://strugee.net/blog/2017/03/express-4.x-in-pump.io-core</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/express-4.x-in-pump.io-core</guid><category><![CDATA[pump.io]]></category><category><![CDATA[development]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 20 Mar 2017 16:22:27 GMT</pubDate></item><item><title><![CDATA[RC week 10]]></title><description><![CDATA[<p>This is week 10 of being at the <a href="https://recurse.com">Recurse Center</a>.</p>
<script async="" defer="" src="https://www.recurse-scout.com/loader.js?t=3d49e64361d4b897ffd2fd56dcd93ca4"></script>
<h2>Day 35</h2>
<p>Arrived ~13:00, departed ~21:30, total time at RC 8h30m.</p>
<p>Decided (in the morning) to sleep in because honestly, I was just really behind on sleep.</p>
<p>Didn't do a whole lot today. Took care of the monthly pump.io release, but spent most of the day writing <a href="https://strugee.net/blog/2017/03/driftless-at-1000-mph">Driftless at 1,000 mph</a>. In the evening (i.e. after the Iron Blogger meeting) I spent some time fixing ejabberd's configuration to use the new access control syntax (I'd rewritten the config a while back, but hadn't deployed it yet because it broke logins).</p>
<h2>Day 36</h2>
<p>Arrived ~10:40, departed ~23:40, total time at RC 13h0m.</p>
<p>Spent basically all day working on <a href="https://github.com/strugee/realtime.recurse.com">realtime.recurse.com</a>. I (mostly) finished up the bits that watch the filesystem and dispatch events (including the "periodic" submission logic), then started in on an automatic update mechanism. I'm pretty pleased with how it's turning out - I think it's pretty elegant. And, it's secure - updates are required to be cryptographically signed by yours truly. Went out to Black Burger with a <em>bunch</em> of people before going to Fat Cat in the evening. Then came back, worked on the updater a little more, and went home.</p>
<h2>Day 37</h2>
<p>Arrived ~14:40, departed ~23:20, total time at RC 8h40m.</p>
<p>Overslept by accident this morning. Spent a bit of time in the afternoon dealing with email, then focused on realtime.recurse.com - basically I was just working on the autoupater I started yesterday. My Python is <em>definitely</em> improving!</p>
<p>I'm actually really pleased with the updater. It's pretty elegant, I think. Basically whenever the server sees a request coming from the client, it checks the <code>User-Agent</code> header to see if the client's out of date and, if so, sends back an <code>X-Requires-Upgrade</code> header. Upon receiving this header the client will go fetch version information, which it'll use to download and verify an update bundle cryptographically signed by me. Yay for secure updates, and yay for simplicity! (Note that this design basically just reuses the connections the client is already making to the server, so it doesn't have to poll for updates all the time.)</p>
<p>I also spent a couple hours talking with Mikhail, discussing a lot of things - ranging from how Node.js's event loop works to the <code>is</code> keyword in Python to static site generator architecture compared to dynamic site architecture.</p>
<h2>Day 38</h2>
<p>Arrived ~9:50, departed ~23:00, total time at RC 13h10m.</p>
<p>Woke up, completely naturally, around 7 AM despite going to sleep at 3 AM. This was so surprising - and this is a true story - that I thought I had woken up at 7 PM and missed the entire day, including Security Club, Abstract Salad Factory, and Thursday night presentations. I was <em>really</em> mad, honestly. But then I looked at my watch and realized that I was on 24-hour time but it didn't say "19:00" and also my alarms were in the future and my phone was in 24-hour time too and also Anja on Zulip said "?" when I said I'd slept through Security Club. Despite the overwhelming evidence in the end, though, I still had a weird feeling that it was 7 PM. So that's the story of how, for a good 5 or 10 minutes, I genuinely believed I'd slept through the entire day.</p>
<p>Once I got to RC, I spent the morning finally(!) merging in a bunch of upstream <code>ejabberd.yml</code> config changes to steevie's ejabberd configuration, which got me closer to fixing the awful spam problem I have. Then I went to Abstract Salad Factory, followed by Security Club. Then in the afternoon (and after presentations) I started reading <a href="https://www.freebsd.org/">FreeBSD</a> documentation since that's what I'm running my new Tor relay on - as I discovered a couple days ago, my old one apparently got hung during boot and was consuming 100% CPU due to the kernel image being corrupted or something. I chose FreeBSD because a) it's a rock-solid system, b) it's a good opportunity to gain experience with administrating a BSD, and c) it increases the diversity of the Tor network. Also, had a conference call in the afternoon with the <a href="https://www.eff.org/">EFF</a> and Paul from <a href="https://ta3mseattle.org/index.php/Main_Page">TA3M Seattle</a> about TA3M Seattle joining the EFF's <a href="https://www.eff.org/electronic-frontier-alliance">Electronic Frontier Alliance</a>, which was exciting for everyone.</p>
<h2>Friday</h2>
<p>Arrived ~13:00, departed ~22:30, total time at RC 9h30m. As always, Friday doesn't count as a day because RC is technically not in session.</p>
<p>Didn't do a whole lot of coding. Spent a while helping <a href="https://jxself.org/">Jason</a> debug <a href="https://datamost.com/">Datamost</a>'s 3.0.0 upgrade (which apparently broke uploads). Attended presentations for the RC Game Jam, then fixed the documentation that caused Jason's problems. Spent a little bit of time polishing the website and README, too.</p>
<p>In the evening, fixed people being banned from ejabberd MUCs, then proceeded to fix my spam problem. Whoooooo! Then I kept working on my Tor relay.</p>
<h2>Executive summary</h2>
<p>Like any week, this had moments where I wasn't very productive. But overall I think it was pretty good - I made a lot of progress on realtime.recurse.com (and improved my Python in the process), and I made a lot of progress on setting up my Tor relay again (and learned a bunch about FreeBSD in the process). Also, I fixed my ejabberd spam problem. I learned nothing from that, but thank <em>god</em> I did it because the spam problem was honestly <em>awful</em>. The one issue was that I just didn't do a very good job getting up and making it to checkins.</p>
<p>Total time at RC 52 hours 50 minutes; cumulative time 464 hours 50 minutes.</p>
]]></description><link>https://strugee.net/blog/2017/03/rc-week-10</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/rc-week-10</guid><category><![CDATA[personal]]></category><category><![CDATA[tor]]></category><category><![CDATA[blaggregator]]></category><pubDate>Wed, 15 Mar 2017 18:42:40 GMT</pubDate></item><item><title><![CDATA[Default-secure systems]]></title><description><![CDATA[<p>So recently I presented on <a href="https://strugee.net/presentation-operational-security/">operational security</a> and then started in on the nightmare that is <a href="https://strugee.net/presentation-https-deployment/">HTTPS deployment</a>. And like I did with <a href="https://strugee.net/blog/2017/01/new-programming-language-part-i-handlers">language-level security</a> (I <em>still</em> need to write part 2 of that post), I thought to myself, this is so difficult. Why isn't there something that will do this for me? That's what my latest project is.</p>
<p>Here's the tl;dr:</p>
<pre><code>type(app)
=&gt; Django/Express.js/etc. app
secure_system(app)
=&gt; Docker image
</code></pre>
<p>Or in other words, you'll be able to take an existing web app that you've written, run it through this system, and it will spit out a complete, reasonably-secure system image.</p>
<p>Let's step back.</p>
<h1>The status quo</h1>
<p>Currently, when a developer wants to run a web app, they can either use something like Heroku, which is fully manged, or a VM from DigitalOcean or Amazon EC2 or something. There are a variety of reasons you might not want to use Heroku, but the only other option is a VM - and with a VM, you get a bare system where you have to set up everything from scratch. Lots of developers just don't have the operational experience to do this properly or securely, but it's not like they can go and get an operations team to do it for them. So they end up with systems that may have active security problems as well as little to no defense-in-depth mitigations for when security inevitably fails. Security is just another operational concern the developer has no time and no expertise to deal with, so it just doesn't happen. The developer spins up a VM, gets it to where it "works" and then moves on. <strong>This is not good enough.</strong></p>
<p>I don't want to create a false dichotomy, though: this is not the developer's fault. Everyone has conflicting priorities and it's unreasonable to expect the developer to spend lots of time learning to administrate systems so that they can then spend even more time, you know, administering systems. The problem is that there just isn't enough options available - we have to provide something better.</p>
<h1>A middle ground</h1>
<p>This is what my project is about: creating a middle ground between fully-managed deployment platforms and barebones, setup-from-scratch VMs.</p>
<p>This project rests on the idea that operational security (at least, in a single-server, single-admin context) flows from consistency, least privilege, and proactive, defense-in-depth security measures. Here are a couple core design goals:</p>
<ol>
<li>Meet developers where they are. Configuration management like Puppet is a great way to enforce consistency, but it adds a level of indirection and is just another thing that people running hobbyist projects don't have time to learn.</li>
<li>Tight integration with apps - this excludes more obscure types of web applications, but gives us a better footing to set up a solid deployment environment. It also may let us integrate more tightly with things like Content Security Policy in the future.</li>
<li>Support virtual hosting. The ability to run multiple apps while paying for a single VM is a compelling reason people go with VMs over e.g. Heroku - we won't be helping anyone if we leave this out.</li>
<li>Upgrades are optional. Any system image created by this project will present a system that is organized and can be maintained and modified by hand without breaking everything.</li>
<li>Upgrades are possible. Tight app framework integration will aid with putting data into well-known places that can be backed up and migrated to a new image generated by a newer version of this system.</li>
<li>Not designed for "real" production environments. Any project that has a dedicated operations person should not be using this; they should be rolling their own custom environments with something like Puppet. Accordingly, there won't be compromises in security in favor of flexibility - it's designed to cover 75% of cases "pretty well", which is still better than the status quo for smaller projects (almost 100% of cases don't have any security at all).</li>
</ol>
<p>I'd also like to highlight one really important decision: the output is complete system images. Probably at first this will mean Docker containers but this could easily be turned into VM images. This is a critical part of the design because it allows us to make broad, sweeping changes - for example, preferring system components written in memory-safe languages, replacing OpenSSL with LibreSSL, or creating systemd unit files that lock down service runtime environments to reduce the impact of a compromise. These improvements aren't possible unless we control the whole system. And because upgrades are optional but possible, the developer can get security improvements by "just" upgrading a component that they use, in the same way that they'd upgrade a library or something, as opposed to security being a continuous process they have to worry about. Again, obviously not perfect - but much better than the status quo.</p>
<p>I hope to have a MVP out Real Soon Nowâ¢. But in the meantime, if you have thoughts, feel free to reach out.</p>
]]></description><link>https://strugee.net/blog/2017/03/default-secure-systems</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/default-secure-systems</guid><category><![CDATA[development]]></category><category><![CDATA[security]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 13 Mar 2017 15:59:17 GMT</pubDate></item><item><title><![CDATA[RC week 9]]></title><description><![CDATA[<p>This is week 9 of being at the <a href="https://recurse.com">Recurse Center</a>.</p>
<script async="" defer="" src="https://www.recurse-scout.com/loader.js?t=3d49e64361d4b897ffd2fd56dcd93ca4"></script>
<h2>Day 31</h2>
<p>Arrived ~10:30, departed ~15:15, arrived ~17:30, departed ~1:30, total time at RC 8h45m.</p>
<p>There were only two people in my checkin group this morning, and one of them was me. We thought about joining another checkin group, but it was confusing so we did it with just us.</p>
<p>Didn't really do a whole lot for the rest of the day. I fixed up a couple minor problems on strugee.net. Also I finally(!) fully caught up on blogging and went out to lunch with a bunch of people, including <a href="https://www.recurse.com/residents#Nelson-Elhage">Nelson</a>, the new resident. He's awesome. We had some seriously interesting discussions about the recent CloudFlare incident, as well as the work he did while at Ksplice.</p>
<p>Left early to do laundry, then came back for Nelson's talk.</p>
<p>Spent a lot of time in the evening cleaning up the <a href="https://strugee.net/blog/">pump.io homepage</a> - I removed a bunch of duplicated content, reordered the remaining text to put the important stuff first, and imported all the pump.io-related posts on my personal blog into <a href="http://pump.io/blog/">http://pump.io/blog/</a>.</p>
<h2>Day 32</h2>
<p>Arrived ~11:30, departed ~21:40, total time at RC 10h10m.</p>
<p>Missed my checkin by a wide margin because a) after I realized I just couldn't make it by 10:30 I gave up and had a nice relaxed breakfast and b) I looked at checkins.recurse.com and realized that I was the only one in my checkins group.</p>
<p>Went out to Taim for lunch relatively soon after that. Didn't do a whole lot for the rest of the day, honestly - although I did go for a walk to a park with some folks. Also, tested out the Signal videocalling beta with <a href="https://matthewkelsey.com/">Matt</a>, which worked pretty damn well, I gotta say.</p>
<h2>Day 33</h2>
<p>Arrived ~10:40, departed ~1:45, total time at RC 15h5m.</p>
<p>I kinda tried to make it in for checkins this morning, but not really because I still hadn't fixed the "I'm the only one in my checkin group" problem. Didn't really do much today, honestly.</p>
<p>Went out to lunch with <a href="https://github.com/ant6n">Ant6n</a> and <a href="https://github.com/andrewrk">Andrew</a> and had a lot of interesting discussions with them, ranging all the way from <a href="http://ziglang.org/">Zig</a> to x86 hardware - did you know that internally x86 is actually essentially a VM implementation?</p>
<p>Spent a lot of time keeping Eliana company in Hopper late in the evening.</p>
<h2>Day 34</h2>
<p>Arrived ~11:05, departed ~17:55, total time at RC 6h50m.</p>
<p>Went to Nelson's "my first kernel module" talk immediately upon arriving at RC, which was <em>awesome</em>. I had some interesting conversations with him afterward, too, where I confirmed a theory I had about some weird btrfs-related behavior I'd seen a long time ago (where I <code>kill -9</code>'d an obviously hung <code>btrfs</code> process, which refused to die anyway). We also spent some time trying to figure out why <a href="http://unix.stackexchange.com/q/345285/29146">benchmarking loopback network performance</a> gave some weird results, which was quite informative.</p>
<p>Didn't do a whole lot after lunch. Left halfway through presentations to go to a play with Ant6n which unfortunately (due to a water incident with the subway system) I didn't quite make it to.</p>
<h2>Friday</h2>
<p>Arrived ~15:10, departed ~23:10, total time at RC 8h0m. As always, Friday doesn't count as a day because RC is technically not in session.</p>
<p>Woke up at a decent time but didn't really bother to get up or do anything, so I arrived relatively late to RC. Spent some time reading TOTP in preparation for the RFC reading group meeting (which ended up not happening) and then went to the RC Game Jam kickoff. Spent most of the rest of the day discussing game design with my team before getting dinner and hanging out in Babbage for Bottle Share Friday, even though there weren't that many of us (particularly since James was doing stuff in Babbage) and we didn't have any bottles to share. Oh well - it was still fun.</p>
<p>Talked with <a href="https://github.com/ebb-tide">Deniz</a> and <a href="http://www.aberke.com/">Alex</a> and some other folks (I've forgotten who, to be honest) before heading home.</p>
<h2>Executive summary</h2>
<p>Most of the "interesting" stuff that happened this week had to do with the resident. Got a little done codewise, but not that much. I'd say this week was 50/50 in terms of productivity.</p>
<p>Total time at RC 48 hours 50 minutes; cumulative time 412 hours 0 minutes.</p>
]]></description><link>https://strugee.net/blog/2017/03/rc-week-9</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/rc-week-9</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 06 Mar 2017 18:39:34 GMT</pubDate></item><item><title><![CDATA[Driftless at 1,000 mph]]></title><description><![CDATA[<p>Last week I published <a href="https://strugee.net/blog/2017/02/how-i-passed-2k-github-contributions">How I passed 2k GitHub contributions</a>. This post is, in some ways, the antithesis of that, and it will be very emotional and messy. Here be dragons.</p>
<hr>
<p>Throughout my time at RC I've noticed only one thing is consistently difficult for me: focusing on hard things. Intellectually I love the idea of challenging myself. And I find that when I start to work on things that are new and not easy, it feels good and I tend to keep working on those things, because they're interesting. But starting is something that I just don't do frequently enough, and so I find that I haven't progressed as a programmer nearly as much as I would like to have.</p>
<p>What is productivity?</p>
<p>Merriam-Webster defines it like this:</p>
<blockquote>
<ol>
<li>
<p>the quality or state of being productive</p>
</li>
<li>
<p>the rate per unit area or per unit volume at which biomass consumable as food by other organisms is made by producers</p>
</li>
</ol>
</blockquote>
<p>And "productive" is defined like so:</p>
<blockquote>
<ol>
<li>
<p>having the quality or power of producing, especially in abundance</p>
</li>
<li>
<p>effective in bringing about</p>
</li>
<li>
<p>a) yielding results, benefits, or profits; b) yielding or devoted to the satisfaction of wants or the creation of utilities</p>
</li>
<li>
<p>continuing to be used in the formation of new words or constructions</p>
</li>
<li>
<p>raising mucus or sputum (as from the bronchi)</p>
</li>
</ol>
</blockquote>
<p>By definitions 1-3 I certainly seem to have been productive; I've written a lot of code, much of which is useful. But useful to <em>whom</em>, and for what purpose?</p>
<p>I sometimes feel as if I'm just generating more and more code without any guiding process, as though I'm wasting my time even though concretely I'm getting a <em>lot</em> of things done - driftless even though I'm churning out work at an extremely high rate. Is this <a href="https://en.wikipedia.org/wiki/Impostor_syndrome">imposter syndrome</a>? Or are my worries legitimate?</p>
<p>Maybe a better way to frame this question is to split it in two - am I being productive for myself, and am I being productive for the community - the two things that are currently important to me personally.</p>
<p>I think I am failing at being productive for myself, in some really important ways. I'm also succeeding in some - for example, I used to wish I had an engine to run my blog, and now I have <a href="https://github.com/straticjs">such an engine</a>. But in others I am failing.</p>
<p>What is the purpose of RC? Why am I here?</p>
<hr>
<p>recurse.com <a href="https://www.recurse.com/about#who-comes-to-the-recurse-center">says this</a> about people who come to RC:</p>
<blockquote>
<p>The Recurse Center is for people who want to become better programmers. We are not startup school nor are we a bootcamp: Our focus is helping people become better programmers, not building prototypes, and we're not a training program for web developers.</p>
<p>Because there is no certification or grading, the only reason to come to the Recurse Center is to become a better programmer. As such, you will find kindred spirits and tremendous energy. We look for smart, friendly, self-directed, intellectually curious people who enjoy programming and want to get dramatically better.</p>
</blockquote>
<p>More directly, <a href="https://www.recurse.com/manual">the manual</a> has this to say:</p>
<blockquote>
<p>You should be here primarily because you want to become a better programmer and spend the majority of your time here programming and doing things directly related to programming.</p>
<p>Well, we could ask you to be respectful of speakers and keep conversations on-topic in the Recurse Center space during the day (i.e. if you want to take a break and chat about your weekend, go grab a coffee).</p>
</blockquote>
<p>However, as <a href="https://haroldtreen.com">Harold</a> points out, that <a href="https://haroldtreen.com/tech/recurse/2017/01/27/recurse-center-return-statement/">isn't necessarily an accurate picture</a> of what RC is about. I think a lot of what it's really about is the people who are in the space with you. I've sure had a wonderful time with the people. Does that mean I'm "succeeding"?</p>
<p>Then there's the teaching.</p>
<hr>
<p><img src="/images/anja-teaching.jpg" alt="Screenshot of a Zulip message where Anja says &quot;thank you AJ for teaching us so many things. :)&quot;"></p>
<p>This is referring to the fact that I teach at Security Club every week, plus my volunteering to run a workshop or two for Beginner's Club and Web Dev 101.</p>
<p>Practically speaking, I get very, very little out of teaching at RC. Sometimes it helps solidify (or just plain remind me of) the concepts I teach, but this is the exception, not the norm. So in that sense by spending time teaching, I'm "failing" at being productive for myself. But it seems clear to me that people get a lot out of the time I spend, so I seem to be very productive for the community.</p>
<p>Equally importantly I <em>love</em> teaching. I qualified the previous paragraph with "practically speaking" because emotionally teaching is something that's very beneficial to me. Does that mean I'm "succeeding"? Does it mean I'm "failing" and "succeeding" at the same time?</p>
<p>I honestly don't know.</p>
]]></description><link>https://strugee.net/blog/2017/03/driftless-at-1000-mph</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/driftless-at-1000-mph</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 06 Mar 2017 16:27:20 GMT</pubDate></item><item><title><![CDATA[RC week 8]]></title><description><![CDATA[<p>This is week 8 of being at the <a href="https://recurse.com">Recurse Center</a>. </p>
<script async="" defer="" src="https://www.recurse-scout.com/loader.js?t=3d49e64361d4b897ffd2fd56dcd93ca4"></script>
<h2>Day 27</h2>
<p>Arrived ~10:35, departed ~0:30, total time at RC 13h55m.</p>
<p>Had a nice discussion about Stratic in my checkin group this morning. After that I went to the Capture The Flag introduction workshop, then spent essentially the entire rest of the day finishing up <a href="https://strugee.net/blog/2017/02/from-static-to-stratic-part-1">static to Stratic</a> (which included, in a truly horrifying fashion, me rewriting and force-pushing the demo repository's history a good four times or so) so I'd have a post up for the iron bloggers meeting. Also spent some time fixing some bugs in <a href="https://github.com/straticjs/generator-stratic">generator-stratic</a> and published the beta 2 release with those fixes. Closed out the evening by digging into a remark problem where <code>&lt;script&gt;</code> tags would be stripped from posts. Ended up just asking on Gitter.</p>
<h2>Day 28</h2>
<p>Arrived ~10:30, departed ~20:40, total time at RC 10h10m.</p>
<p>Continued to investigate the remark problem based on replies received overnight - turns out it was a bug in remark fixed in a release that had gone out the door literally the same day I asked. After that I spent the day upgrading <a href="https://github.com/straticjs/generator-stratic">generator-stratic</a> (which, remember, was originally scaffolded <a href="https://strugee.net/blog/2014/12/new-blog-new-site">years ago</a>) to newer and newer releases of <code>yeoman-generator</code> until it used <code>yeoman-generator@latest</code>. Then I spent time adding some basic tests - they're kind of just smoketests for now (are the correct files generated, does <code>gulp serve</code> work) but I <a href="https://github.com/straticjs/generator-stratic/issues/11">intend</a> to expand them. Also moved over some issues to the new <a href="https://github.com/straticjs/RFCs">straticjs/RFCs</a> repository and attended Casual Presentations.</p>
<h2>Day 29</h2>
<p>Arrived ~10:50, departed ~20:35, total time at RC 9h45m.</p>
<p>Didn't do a whole lot codewise today. However, I did teach Unix fundamentals for Beginner Club, which went pretty well - I just spent the entire time in the commandline, demonstrating different commands. We spent a little time talking about shell scripting, but not much. I forgot to cover conditionals, which was dumb since they're pretty weird in shell scripting. Spent some time in the afternoon starting a draft of <a href="https://strugee.net/blog/2017/02/how-i-passed-2k-github-contributions">How I passed 2k GitHub contributions</a></p>
<p>Watched Kiki's Delivery Service in the evening.</p>
<h2>Day 30</h2>
<p>Arrived ~10:35, departed ~00:05, total time at RC 13h30m.</p>
<p>Finished and published <a href="https://strugee.net/blog/2017/02/how-i-passed-2k-github-contributions">How I passed 2k GitHub contributions</a>. Presented <a href="https://strugee.net/presentation-cryptography-basics">cryptography basics</a> at Security Club, then spent a lot of time fixing miscellaneous items on steevie. In particular ejabberd was apparently configured to use a standalone certificate bundle (instead of symlinking to something in <code>/etc/letsencrypt/live</code>) - this was because ejabberd requires the private key and the full chain to be in the same file. TLS certificate renewal didn't properly update this bundle, so XMPP client connections weren't working. ZNC was broken in the same way, so I fixed both of those. I also spent some time setting up a system to publish everything custom in <code>/usr/local</code> <a href="https://github.com/strugee/steevie-usr-local">on GitHub</a> so that it's public and version-controlled. So that's nice.</p>
<h2>Friday</h2>
<p>Arrived ~15:50, departed ~1:00, total time at RC 9h10m. As always, Friday doesn't count as a day because RC is technically not in session.</p>
<p>Came in super late (though I woke up earlier). Almost immediately after that I attended an initial meeting about starting an RFC reading group (an idea I floated on Zulip a couple days ago). Spent most of the day poking at IETF things as well as responding to <a href="https://github.com/hubot-scripts/hubot-seen">hubot-seen</a> PR comments. I just got write access! \o/</p>
<p>Closed out the evening by attending Bottle Share Friday, where I had a long discussion with <a href="http://www.aberke.com/">Alex</a> about running my own email server (which spun off into a discussion of how completely terrible and busted email is), followed by a long discussion about whether Apple's release schedule for Safari and attitude towards new web features and third-party iOS rendering engines is justifiable.</p>
<h2>Saturday</h2>
<p>Arrived ~11:15, departed ~23:30, total time at RC 12h15m. Saturday doesn't count as a day because RC is not in session.</p>
<p>Marathoned Lord of the Rings today. The showing was small and people drifted in and out but most of the time there were a couple people watching, which was fun. The original plan was to watch the director's cut versions, watching The Return of the King on Sunday, but we ended up watching the regular versions because you can't rent the director's cuts off Amazon, and I wasn't about to pay $30 for movies that I <em>already own</em> on DVD back home. We probably would've still watched on Sunday, except that I went out to get pizza for dinnr and found out that it was pouring rain (with thunder/lightning and everything). So I decided we'd watch The Return of the King and wait for the rain to let up, which worked beautifully.</p>
<p><a href="https://github.com/Husseinfarah93">Hussein</a> came in just as I was about to leave and stated that he almost had a heart attack because he sprinted literally from his apartment to Duane Reade, which truthfully was absolutely <em>hilarious</em>. We had some fun wandering around Duane Reade trying to find soap (which I needed to buy) before we both headed home.</p>
<p>(As a side note, my favorite brand of mac 'n' cheese by far is Annie's, which my local supermarket does not carry. But apparently Duane Reade does!? Wat???)</p>
<h2>Executive summary</h2>
<p>This week was weirdly divided - some parts were hyper-productive and some parts were pretty terrible. I certainly got a lot of work done on Stratic, and I taught a lot. But I didn't really do a good job of working on stuff that pushed my programming abilities forward.</p>
<p>Total time at RC 68 hours 45 minutes; cumulative time 363 hours 10 minutes.</p>
]]></description><link>https://strugee.net/blog/2017/03/rc-week-8</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/rc-week-8</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Wed, 01 Mar 2017 14:11:19 GMT</pubDate></item></channel></rss>