<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[strugee.net blog - 2015]]></title><description><![CDATA[strugee.net blog - 2015]]></description><link>https://strugee.net/blog/2015</link><generator>stratic-indexes-to-rss</generator><lastBuildDate>Tue, 07 May 2019 08:38:00 GMT</lastBuildDate><atom:link href="https://strugee.net/blog/2015/index.rss" rel="self" type="application/rss+xml"/><copyright><![CDATA[Â© Copyright 2012-2018 AJ Jordan. Available under the GNU Affero GPL.]]></copyright><webMaster><![CDATA[AJ Jordan <alex@strugee.net>]]></webMaster><item><title><![CDATA[Programming as an art form]]></title><description><![CDATA[<p>The other day I described programming to someone. I pointed out that it's actually pretty easy to teach yourself programming languages, especially since after a while you start to carry over concepts from other languages. But what surprised me most about <em>my own explanation</em>(!) was when I compared programming to art: it's the kind of thing where you can just try stuff out and see what works and what doesn't, with no real consequences.</p>
<p>Since I said that, I've actually been thinking about it quite a bit. Programming is traditionally described as an activity closely related to mathematics, and to a certain extent, this makes a lot of sense, because of the logical skills that go into programming. You have to be able to reason your way through situations in order to effectively debug a program, which means logically eliminating possible points of failure. This is where math skills become very important.</p>
<p>But coding isn't just about logic. At <a href="http://opensourcebridge.org/">OSBRIDGE</a> this year, I attended a session about the beauty of code - it's hard to describe to someone who doesn't live and breathe code, but we all know it when we see it. We as a community value elegance in code; clever algorithms; thinking outside the box, and as I said in my <a href="https://strugee.net/presentation-just-do-it/#19">Just Do It slides</a>, the mere existance of Ruby proves this. So when I described programming as being like art, part of where I was getting that is the analogy I actually said (being able to easily mess around), but part of it was coming from my appreciation of the beauty of code. Part of it was coming from my sense of the aesthetic properties of programming.</p>
<p>I want us, as a community, in both our regular coding but also our educational outreach, to stop pretending that programming is so logical that it <em>is</em> math. Yes, there are elements of mathematics in coding. Lots of it, even. But to treat programming as a branch of mathematics is doing a disservice to the practice. So in addition to treating programming as a form of math, I want us to start treating programming as a form of art. There <em>is</em> such a thing as ugly code. The entire concept of refactoring would barely exist if that wasn't true. So let's start truly appreciating the aesthetic beauty of code, and let's start teaching that. To be honest, I'm not sure how you would teach that. But it couldn't hurt to try.</p>
<p>But even if we can and should treat it as both of those things, that doesn't mean that we should make that the be-all-end-all of how we describe programming. I truly believe that programming is not a branch of mathematics. And it's not an art form, either. Programming is neither of those things and both of those things; it is something entirely new, and we should treat it as such. If this isn't true, why do people swear by certain software? Why do people (including myself) aggressively sticker their laptops to showcase what software they use? And if this isn't true, how is it possible that people <em>love</em> their code?</p>
]]></description><link>https://strugee.net/blog/2015/11/programming-as-an-art-form</link><guid isPermaLink="true">https://strugee.net/blog/2015/11/programming-as-an-art-form</guid><category><![CDATA[development]]></category><category><![CDATA[musings]]></category><pubDate>Sun, 08 Nov 2015 20:17:38 GMT</pubDate></item><item><title><![CDATA[Revisiting my Tor relay]]></title><description><![CDATA[<p>(Okay, so I <em>miserably</em> failed my blog-every-day thing. Shut up. Maybe next time I'll try every week or something... anyway.)</p>
<p>A couple of days ago I logged into the <a href="https://atlas.torproject.org/#details/710E9E3A0A443E3FD33D2801298042783CAD2EAE">Tor relay I run</a> to show someone the ARM graphs. I had a fair amount of traffic, so the graphs were fairly impressive, but I'm also in the habit of running <code>apt-get update; apt-get upgrade</code> every time I log into a server, so I did that too. To my surprise, I got a message telling me that there was a dependency problem with my kernel! So like the great sysadmin I am, I looked at such a fundamental system problem, shrugged my shoulders, and said, "oh, I should probably fix that". And then logged out.</p>
<p>Well, I did end up fixing it today. And boy, was it an adventure. My first step was to ignore the APT problems and edit my <code>torrc</code>, to reflect a) the fact that I'm not eligible for the AWS Free Tier anymore (so I needed to throttle bandwidth), b) my new email, and c) my new GPG key. With that being done, I knew that I could easily have the system fix dependency problems by doing a simple <code>apt-get install -f</code>. Easy!</p>
<p>Well, no. That tried to install some Linux kernel headers, which seemed all well and good, until I got this:</p>
<pre><code>Unpacking linux-headers-3.2.0-90 (from .../linux-headers-3.2.0-90_3.2.0-90.128_all.deb) ...
dpkg: error processing /var/cache/apt/archives/linux-headers-3.2.0-90_3.2.0-90.128_all.deb (--unpack):
unable to create `/usr/src/linux-headers-3.2.0-90/arch/arm/plat-pxa/include/plat/dma.h.dpkg-new' (while processing `./usr/src/linux-headers-3.2.0-90/arch/arm/plat-pxa/include/plat/dma.h'): No space left on device
No apport report written because the error message indicates a disk full error
dpkg-deb: error: subprocess paste was killed by signal (Broken pipe)
</code></pre>
<p>Um, what? How am I out of free space? Okay, whatever. I knew that there were probably a lot of packages cached in <code>/var/cache/apt/</code>, including old, vulnerable packages that had been replaced by the unattended upgrades system. I did an <code>ls</code>, and found only about five <code>.deb</code> files - something must have been automatically cleaning that directory. I was getting a little worried now, but I nuked the files anyway and reran <code>apt-get install -f</code>. <em>Same thing</em>. Well, okay, maybe I didn't get rid of enough stuff? How much did I need?</p>
<pre><code>$ df -h /
Filesystem      Size  Used Avail Use% Mounted on
/dev/xvda1      4.0G  2.2G  1.6G  59% /
</code></pre>
<p>At this point I'm in full-on "something-is-seriously-wrong-and-I-<em>need</em>-to-recover" mode. How was it possible that I had only used 59% of the filesystem, but <code>dpkg</code> was saying my disk was full? A little searching the internet later, I found the culprit:</p>
<pre><code>$ df -i
Filesystem     Inodes  IUsed IFree IUse% Mounted on
/dev/xvda1     262144 257479  4665   99% /
udev            74758    377 74381    1% /dev
tmpfs           76179    259 75920    1% /run
none            76179      3 76176    1% /run/lock
none            76179      1 76178    1% /run/shm
</code></pre>
<p>I hadn't run out of disk space. But I <em>had</em> run out of inodes. (Isn't this supposed to happen to <em>other</em> people?)</p>
<p>I tried removing some stuff via APT, but that refused to do anything due to the dependency problems. My next thought was that there were probably a bunch of old processes running that were essentially holding a bunch of inodes hostage. I couldn't install <code>debian-goodies</code>, so I couldn't use <code>checkrestart</code>, but I improvised by looping over all running services in a for loop, and restarting them.</p>
<p>Still nothing.</p>
<p>I'm not proud of what I did next. But I was backed into a corner, so I did something only <code>dpkg</code> is supposed to do. I ran <code>rm -r</code> on a couple directories in <code>/usr/src</code>. And boy, it was like magic. Suddenly <code>apt-get install -f</code> worked like a charm. It started to upgrade a couple packages, rebuilding some GRUB configuration files... and then came to a screeching halt.</p>
<pre><code>Setting up linux-headers-3.2.0-90-virtual (3.2.0-90.128) ...
dpkg: dependency problems prevent configuration of linux-headers-virtual:
linux-headers-virtual depends on linux-headers-3.2.0-68-virtual; however:
Package linux-headers-3.2.0-68-virtual is not installed.
dpkg: error processing linux-headers-virtual (--configure):
dependency problems - leaving unconfigured
No apport report written because the error message indicates its a followup error from a previous failure.
dpkg: dependency problems prevent configuration of linux-virtual:
linux-virtual depends on linux-headers-virtual (= 3.2.0.68.81); however:
Package linux-headers-virtual is not configured yet.
dpkg: error processing linux-virtual (--configure):
dependency problems - leaving unconfigured
No apport report written because the error message indicates its a followup error from a previous failure.
Errors were encountered while processing:
linux-headers-virtual
linux-virtual
E: Sub-process /usr/bin/dpkg returned an error code (1)
</code></pre>
<p>Are you kidding?? <em>More</em> errors?</p>
<p>Turns out that APT is essentially the only thing on this system that makes large changes to the filesystem. So the probability that APT would be the program to trigger the inode limit was pretty high. It started an upgrade run, then got interrupted in the middle by the "no space left on device" error, leaving the dependency tree in a state that we in the tech community call "100% totally screwed". (This is the technical term.)</p>
<p>I'll spare you the gory details, but I ended up trying to chase down packages in the Ubuntu archive, running <code>ubuntu-support-status</code> beacuse I was wondering if the packages I was looking for actually <em>weren't in</em> the archive, because they were unsupported, using <code>aptitude</code> instead of <code>apt-get</code> (because <code>aptitude</code>'s dependency resolver tends to be better), etc. Finally the solution turned out to be doing <code>dpkg --install</code> on the exact right <code>.deb</code>s in the exact right order, which finally satisfied APT's dependency woes, allowed <code>apt-get install -f</code> to fix the configuration problems, and allowed the hundreds of packages which had been waiting for an upgrade to <em>finally</em> install. Whew!</p>
<p>Anyway, I need to upgrade the version of Ubuntu the system is on (currently it's 12.04.5 LTS), because Tor is out of date (among other reasons). However, since that will involve taking the system down for a reboot, I wanted to memorialize the following:</p>
<pre><code>$ uptime
00:01:47 up 392 days, 17:15,  1 user,  load average: 0.05, 0.04, 0.05
</code></pre>
<p>Holy moly. This system is bordering on 400 days of uptime. That's over a year of continuous run time! Astonishing.</p>
<p>Wish me luck with this upgrade...</p>
<p><strong>tl;dr</strong>: inode limits are <em>killer</em>.</p>
]]></description><link>https://strugee.net/blog/2015/09/revisiting-my-tor-relay</link><guid isPermaLink="true">https://strugee.net/blog/2015/09/revisiting-my-tor-relay</guid><category><![CDATA[sysadmin]]></category><category><![CDATA[tor]]></category><pubDate>Fri, 04 Sep 2015 16:34:29 GMT</pubDate></item><item><title><![CDATA[2 lbs of stickers]]></title><description><![CDATA[<h2>First things first</h2>
<p>This year I am again attempting to blog every day of summer. I've done this sporadically in the past (and never very well), but I'm trying again this year. Maybe this time will be different. (This is actually my fourth day of summer, but I wanted some time off. Whatever.)</p>
<h2>2 lbs of stickers??</h2>
<p>So recently (i.e. within the past year) I've become more active within the local Seattle community. I'm now on the organizing committee for the <a href="https://wiki.openitp.org/events:techno-activism_3rd_mondays:seattle">Seattle chapter of TA3M</a> (Techno Activism, 3rd Mondays), and am actually running another <a href="https://cryptoparty.in/">CryptoParty</a> this coming Monday. Now, within the wider Seattle activism/tech scene, there's this bag of stickers. It used to be owned by a friend of mine named Elcaset, who apparently just took home some leftovers one day and then kept receiving more and more, because people associated him with stickers. Sadly, Elcaset had to move away from the Seattle area. And since we wanted to keep the stickers, someone needed to keep the bag. And so I ended up with a giant, giant bag of stickers.</p>
<p>Me being me, I decided to sort them and separate them, so that they were easier to lay out on a table. Then I separated them by category. And then, just for fun (and since there were so many of them), I decided to weigh them.</p>
<p>The heavyweight champ by far is the <a href="https://fsf.org/">Free Software Foundation</a> bag, with a whopping 8.25 oz of stickers. Yeah, when I said "heavy" "weight", I meant it. Next we have local usergroups (FreeGeek Seattle, TA3M Seattle, Seattle Privacy and one other whose logo I know is local, but I don't recognize) tied with distributions, both at 5.225 oz. Next up is advocacy groups, namely the <a href="https://eff.org/">EFF</a> and the <a href="https://aclu-wa.org/">ACLU of Washington</a>. I'll admit to cheating on this one, since the EFF has some assorted trinkets that aren't actually stickers, but whatever. This bag was 4.5 oz. After advocacy groups is the miscellaneous bag, which has software projects not associated with anything else, activism films, conferences (aka <a href="https://linuxfestnorthwest.org/">LinuxFest Northwest</a>) and political parties (aka the <a href="https://uspirates.org/">Pirate Party</a>). Finally, as we approach the bottom,  the security/anonymity bag had 2.75 oz, followed closely by the <a href="https://duckduckgo.com/">DuckDuckGo</a> bag, which had 2.725. Finally, the LibreOffice/document freedom bag had 2 oz of stickers.</p>
<p>What all this is to say is that I now own a <em>lot</em> of stickers. Specifically, I own an astonishing 2 <em>lbs</em>, 1.625 oz of stickers. Seriously. 2 pounds of what is essentially paper. That's almost unbelievable. (I should point out at this point that I got that number from weighing all of them, not by adding up the above figures, so there may be a slight difference.)</p>
<p>Anyway. I guess I'll have plenty of material to hand out at my CryptoParty.</p>
<h2>Other things</h2>
<p>Other things that have happened recently-ish: I'm going to be in Advanced Photography next year, which I'm super excited about! Also, I joined the SAAS dance program, which should be really fun. At first it was a bit inconvenient, because even though I really wanted to be in dance, with Advanced Photography <em>and</em> Intermediate Dance, I didn't have room in the fall for a Study Hall (which I'm going to need because of college apps). So I ended up deciding to only do robotics on the weekends. Not only that, but the dance show is inevitably the same weekend as LFNW, so I was going to miss Game Night and the Saturday sessions and the afterparty. But things worked out, because apparently they had so many people auditioning this year that they split Intermediate Dance into two sections, and I'm in the one that has class in the winter and spring. That means that not only can I take a study hall in the fall, but our dance show will be at a different time of year, so I can go to LinuxFest Northwest, too. Whoo!</p>
]]></description><link>https://strugee.net/blog/2015/06/2-lbs-of-stickers</link><guid isPermaLink="true">https://strugee.net/blog/2015/06/2-lbs-of-stickers</guid><category><![CDATA[personal]]></category><pubDate>Sun, 14 Jun 2015 01:02:27 GMT</pubDate></item></channel></rss>