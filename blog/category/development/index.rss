<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[strugee.net blog - 'development' category]]></title><description><![CDATA[strugee.net blog - 'development' category]]></description><link>https://strugee.net/blog/category/development</link><generator>stratic-indexes-to-rss</generator><lastBuildDate>Thu, 12 Dec 2019 21:31:57 GMT</lastBuildDate><atom:link href="https://strugee.net/blog/category/development/index.rss" rel="self" type="application/rss+xml"/><copyright><![CDATA[Â© Copyright 2012-2018 AJ Jordan. Available under the GNU Affero GPL.]]></copyright><webMaster><![CDATA[AJ Jordan <alex@strugee.net>]]></webMaster><item><title><![CDATA[filter-other-days 1.1.0 and 2.0.0 are now available]]></title><description><![CDATA[<p>I'm pleased to announce that <code>filter-other-days</code> 1.1.0 and 2.0.0 are now available. In fact, they were both released simultaneously over three weeks ago while I was at <a href="https://seagl.org/">SeaGL</a>, but things at college have been so hectic I'm only just finding time to write about them! If you're not already familiar with <code>filter-other-days</code> - which provides reliable, Artificial Ignorance-compatible logfile date filtering even in the face of unknown formats - I would encourage you to read my blog post <a href="https://strugee.net/blog/2017/10/announcing-filter-other-days">introducing the tool for the first time</a>. Or, if you read this post late enough, you could even watch video of the <a href="https://osem.seagl.org/conferences/seagl2019/program/proposals/682">talk I gave at SeaGL</a>, which talks about <code>filter-other-days</code> before pivoting into a broader discussion of the kind of runaway complexity <code>filter-other-days</code> is designed to address.</p>
<p>1.1.0 and 2.0.0 are both feature releases. Due to <code>filter-other-days</code> 2.0.0 breaking compatibility with OpenBSD, I'm providing 1.1.0 which contains everything that <code>filter-other-days</code> 2.0.0 does <em>except</em> for the feature that breaks OpenBSD support - localization in the logfile filters. (Localization does not and to my knowledge cannot work on OpenBSD because OpenBSD does not support the POSIX features that <code>filter-other-days</code>' localization relies on.)</p>
<p>Here are the highlights of the engineering that both 1.1.0 and 2.0.0 share:</p>
<ul>
<li><code>filter-other-days -d</code> operates on any day instead of the current date on supported systems</li>
<li><code>filter-other-days</code> is portable to OpenBSD, NetBSD, OpenIndiana and OmniOS (i.e. illumos), and Cygwin</li>
<li>GNU <code>seq</code> is no longer required; the only requirement for core functionality is now POSIX</li>
<li>Several bugs have been fixed</li>
<li>Release artifacts are built <a href="https://reproducible-builds.org/">reproducibly</a></li>
<li>Automated testing has been improved</li>
</ul>
<p>Note that <code>filter-other-days -d</code> <em>does</em> require more than POSIX - it needs a system with either GNU <code>date -d</code> semantics or BSD <code>date -r</code> semantics. This is because POSIX does not provide enough support to implement this feature otherwise. If your system does not support either of these, <code>filter-other-days</code> will simply turn the feature off. You can check if <code>-d</code> is available by looking for it in the help output - it will show up only if the system supports it.</p>
<p>In addition to the above, <code>filter-other-days</code> 2.0.0 <em>also</em> includes support for filtering logfiles in different locales. This means that if your system logs things like month names in languages other than English, <code>filter-other-days</code> will now be able to process these logs! <code>filter-other-days</code> will automatically use the C locale (which is mandated to be available by POSIX) and will additionally use the locale defined by the <code>$LANG</code> environment variable, if set. You can also specify more locales to be loaded by specifiying the <code>-l</code> command line flag. <code>filter-other-days</code> extracts the information it needs using specific keywords in the system locales, which means that if you want <code>filter-other-days</code> to load a particular locale to filter with, you need to have that locale installed.</p>
<p>Unfortunately, there's one more complication: some systems are buggy and do not have keywords that properly conform to POSIX. <a href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=237752">FreeBSD 12.0 and below</a> as well as <a href="https://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=54693">NetBSD</a> are known to have these bugs. Since these systems are relatively popular, I am providing patched versions of <code>filter-other-days</code> that will work around these bugs. You can recognize these versions because they have <code>freebsd</code> in the tarball filename. They will also tell you they've been patched for FreeBSD (and NetBSD) in all relevant places, like the version output and the manpage.</p>
<p>So, to summarize what version to use:</p>
<ul>
<li>If you're on OpenBSD, use 1.1.0</li>
<li>If you're on FreeBSD 12.0 or below, or on NetBSD, use 2.0.0 with FreeBSD patches</li>
<li>Otherwise, use the unpatched 2.0.0 tarballs</li>
</ul>
<p>I hope these releases of <code>filter-other-days</code> are useful to people! I'm super proud of them and I couldn't be more excited for people to try them out. And as always, feel free to <a href="https://github.com/strugee/filter-other-days/issues">report any bugs</a> you find!</p>
]]></description><link>https://strugee.net/blog/2019/12/filter-other-days-1.1.0-and-2.0.0-are-now-available</link><guid isPermaLink="true">https://strugee.net/blog/2019/12/filter-other-days-1.1.0-and-2.0.0-are-now-available</guid><category><![CDATA[development]]></category><category><![CDATA[releases]]></category><category><![CDATA[sysadmin]]></category><category><![CDATA[blaggregator]]></category><pubDate>Wed, 11 Dec 2019 17:45:24 GMT</pubDate></item><item><title><![CDATA[pump.io DOMPurify security fixes available]]></title><description><![CDATA[<p>Recently the cross-site-scripting sanitization library that pump.io uses, <a href="https://github.com/cure53/DOMPurify">DOMPurify</a>, published several security advisories for mXSS vulnerabilities affecting browsers based on the Blink rendering engine - you can find the latest one, for example, <a href="https://lists.ruhr-uni-bochum.de/pipermail/dompurify-security/2019-October/000012.html">here</a>. As we've done in the past, the pump.io project is publishing security releases to ensure that everyone is using the latest version of DOMPurify. Per our <a href="https://github.com/pump-io/pump.io/wiki/Security">security support policy</a>, we are providing patches for the current stable release and the previous stable release:</p>
<ol>
<li>pump.io 5.1.2 has been updated to pump.io 5.1.3</li>
<li>pump.io 5.0.2 has been updated to pump.io 5.0.3</li>
</ol>
<p>As these are security releases we encourage administrators to upgrade as soon as possible. Both 5.1.3 and 5.0.3 are drop-in replacements for their predecessors. If you have pump.io 5.1 installed via npm - our recommended configuration - you can upgrade with:</p>
<pre><code>$ npm install -g pump.io@5
</code></pre>
<p>If you're on pump.io 5.0, we recommend that you also run the above command to upgrade to 5.1 - it's a drop-in replacement for 5.0. However, if you want to stick with 5.0 for the time being, you can install a patched version with:</p>
<pre><code>$ npm install -g pump.io@5.0
</code></pre>
<p>Note that if you have a source-based install, the above commands won't work and you will need to upgrade however you usually do - this will depend on how exactly you have pump.io set up.</p>
<p>If you need help, or if you have questions about these security releases, get in touch with <a href="https://github.com/pump-io/pump.io/wiki/Community">the community</a>.</p>
]]></description><link>https://strugee.net/blog/2019/10/pump.io-dompurify-security-fixes-available</link><guid isPermaLink="true">https://strugee.net/blog/2019/10/pump.io-dompurify-security-fixes-available</guid><category><![CDATA[pump.io]]></category><category><![CDATA[development]]></category><category><![CDATA[security]]></category><category><![CDATA[releases]]></category><category><![CDATA[blaggregator]]></category><pubDate>Tue, 15 Oct 2019 18:28:01 GMT</pubDate></item><item><title><![CDATA[Make ReCaptcha's "I'm not a robot" accurate]]></title><description><![CDATA[<p>A month or two ago, my friend Evan <a href="https://twitter.com/evanpro/status/1098367574969077761">tweeted</a>:</p>
<blockquote>
<p>Fuck reCaptcha.</p>
<p>I am sick of doing unpaid labour classifying images for Google.</p>
<p>We need a captcha widget that contributes to the global commons instead of siphoning value into yet another proprietary lockbox.</p>
</blockquote>
<p>Frankly I agree. Not only am I being forced to do Google's dirty work, but ReCaptcha is known to make life extremely difficult for Tor users. I've literally spent 15 minutes before trying to solve a stupid captcha and eventually I gave up because Google just wouldn't let me past. ReCaptcha profits off of innocent users who are just trying to go about their business on the web, and Google is exploiting people in order to build a locked-up, proprietary image recognition system. Why are we, the users, not allowed to have access to the fruits of the labor that we are forced to provide for free? Because of this, today I am announcing an advanced, next-generation, cutting-edge platform that is poised to <em>revolutionize</em> this problem space.</p>
<p>Nah, just kidding (mostly). Inspired by <a href="https://twitter.com/evanpro/status/1098987608020008961">another tweet from Evan</a>, I threw together a browser extension in like 30 minutes that changes "I'm not a robot" to "I want to do unpaid image classification". After a long exchange with the fine folks behind addons.mozilla.org (because my account is so old that when I logged in I hit <a href="https://github.com/mozilla/addons-server/issues/8765">this bug</a> and got 500 Internal Server Error), I've finally sorted out my logins, and today I've uploaded the latest version of this extension to both addons.mozilla.org and the Chrome Web Store. So at least if you're getting screwed by Google, you'll be able to make them be honest about how they're screwing you. Here's a screenshot:</p>
<p><img src="/images/recaptcha-screenshot.jpg" alt="Screenshot of a test page with Google ReCaptcha on it; &quot;I'm not a robot&quot; has been replaced with &quot;I would like to do unpaid image classification&quot;"></p>
<p>Also, for some extra irony, I took the icon from Google's Apache 2.0-licensed <a href="https://material.io/tools/icons/?search=image_search&amp;icon=image_search&amp;style=baseline">Material Design icon set</a>. If someone feels like contributing a real icon, I would probably replace the current icon with it. (I would also be happy to take translations into different languages!)</p>
<p>In the words of the README:</p>
<blockquote>
<p>This was Evan Prodromou's idea unless you like it, in which case the idea to follow through and make an actual extension was totally all mine.</p>
</blockquote>
<p>I hope people enjoy this extension! <em>Make ReCaptcha's "I'm not a robot" accurate</em> is available as a <a href="https://addons.mozilla.org/en-US/firefox/addon/make-recaptcha-text-accurate/">Firefox extension</a> and as a <a href="https://chrome.google.com/webstore/detail/make-recaptchas-im-not-a/olbjmgkbokabjfaelgogjjllpnfjgdoe">Chrome extension</a>, and the source is published <a href="https://github.com/strugee/recaptcha-unpaid-labor">on GitHub</a>.</p>
]]></description><link>https://strugee.net/blog/2019/04/make-recaptchas-im-not-a-robot-accurate</link><guid isPermaLink="true">https://strugee.net/blog/2019/04/make-recaptchas-im-not-a-robot-accurate</guid><category><![CDATA[development]]></category><category><![CDATA[blaggregator]]></category><pubDate>Sat, 20 Apr 2019 22:05:58 GMT</pubDate></item><item><title><![CDATA[pump.io 5.1.1, Docker images, and sunsetting Node 4 support]]></title><description><![CDATA[<p>It's been a (relatively) long time since we've put anything on this blog, and I think it's high time for an update - especially since there are so many exciting things afoot! Not only is pump.io 5.1.1 now on npm, but we have new experimental Docker images! With <a href="https://medium.com/the-node-js-collection/april-2018-release-updates-from-the-node-js-project-71687e1f7742">upstream having already dropped security support</a>, we're also planning to drop support for Node 4 soon.</p>
<p>Let's take these one at a time.</p>
<h1>pump.io 5.1.1</h1>
<p>Several months ago I <a href="https://github.com/pump-io/pump.io/pull/1438">landed</a> a patch from contributor <a href="https://github.com/vxcamiloxv">Camilo QS</a> fixing a bug in pump.io's session handling in a route serving uploads. This bug made it so that non-public uploads would always return HTTP 403 Unauthorized, even if the user actually <em>was</em> authorized. Clearly, this makes uploads unusable for people who don't like to post everything publicly. <a href="https://identi.ca/evan">Evan</a> suggested that we should backport this bugfix since it's so high-impact, and I agree. So that's what pump.io 5.1.1 contains: a bugfix for uploads. Since it's a patch release 5.1.1 is a drop-in replacement for any 5.x pump.io release, so I'd highly encourage administrators to upgrade as soon as it's convenient. We'd also love it if you <a href="https://github.com/pump-io/pump.io/issues">file any bugs you find</a>, and feel free to get in touch with the <a href="https://github.com/pump-io/pump.io/wiki/Community">community</a> if you need help or have questions. As a reminder, you can subscribe to our <a href="https://lists.strugee.net/mailman/listinfo/pumpio-announce">low-volume announce mailing list</a> to get email when we put out new releases like this. Also, I would be remiss if I didn't mention that my signing key setup has changed temporarily - see <a href="https://strugee.net/blog/2018/04/new-temporary-signing-keys">here</a> if you want to cryptographically verify the 5.1.1 release.</p>
<p>If you're on an npm-based install, you can upgrade with <code>npm install -g pump.io@5.1.1</code>. If you're on a source-based install, you can upgrade by integrating the latest commits in the <code>5.1.x</code> branch. See <a href="https://github.com/pump-io/pump.io/blob/master/CHANGELOG.md#511---2018-05-05">here</a> for the changelog.</p>
<p>But that's not all. pump.io 5.1.1 also includes another exciting change: with this release, we've integrated automation to relase pump.io Docker images too.</p>
<h1>Docker images</h1>
<p>We've wanted to release pump.io Docker images for <a href="https://github.com/pump-io/pump.io/issues/789">a long time</a>. But Docker has a well-known problem: security vulnerabilities in Docker Hub images <a href="https://www.infoq.com/news/2015/05/Docker-Image-Vulnerabilities">are</a> <a href="https://blog.acolyer.org/2017/04/03/a-study-of-security-vulnerabilities-on-docker-hub/">rampant</a>. Even though we've had a <code>Dockerfile</code> in the repository <a href="https://github.com/pump-io/pump.io/pull/1348">for a while</a> thanks to contributor <a href="https://github.com/JanKoppe">thunfisch</a>, we didn't want to release official Docker images if we weren't sure we could always provide security support for them.</p>
<p>Unfortunately, Docker the company has done very little to address this problem. Most of their solutions are aimed at image consumers, not authors. Docker Hub has <em>some</em> capacity for automatically rebuilding images, but unfortunately, it's not enough and you end up having to roll everything yourself anwyay. Pretty disappointing - so we had to get creative.</p>
<p>Our solution to this problem is to utilize Travis CI's <a href="https://docs.travis-ci.com/user/cron-jobs/">cron functionality</a>. Every day, Travis will automatically trigger jobs that do nothing but build pump.io Docker images. These images are then pushed to Docker Hub. If nothing has changed, Docker Hub recognizes that the "new" images are actually identical with what's already there, and nothing happens. But if there <em>has</em> been a change, like a native dependency receiving a security update, then the image ID will change and Docker Hub will accept the updated image. This cronjob is enabled for the <code>5.1.x</code> branch and master (which as a side effect, means that alpha Docker images are published within 24 hours of a git push), and in the future it will be enabled on all branches that we actively support. Thus, Docker users can easily set up automation to ensure that they're running insecure images for, at most, 24 hours.</p>
<p>If you're interested in trying out the Docker images, we'd love to know how it goes. They should still be treated as experimental at the moment, and early feedback would be super useful. You can read more details in our <a href="https://pumpio.readthedocs.io/en/latest/installation/about-docker-images.html">ReadTheDocs documentation</a>.</p>
<p>Note that there are still more changes that we'd like to make to the Docker images. These changes didn't make it into the 5.1.1 packaging since they felt too invasive for a patch release. Instead we plan to make them in the next release, which is planned to be semver-major. Which brings me neatly to the last topic...</p>
<h1>Sunsetting Node 4, 5, and 7 support</h1>
<p>We had a good run, but it's time to say goodbye: Node.js upstream has <a href="https://medium.com/the-node-js-collection/april-2018-release-updates-from-the-node-js-project-71687e1f7742">marked</a> Node 4.x as end-of-life, and in accordance with our <a href="https://github.com/pump-io/pump.io/wiki/Node.js-version-support">version policy</a>, we're doing the same. Since this is a semver-major change, we're also taking the opportunity to drop support for Node 5.x and Node 7.x. These changes have been made as of commit <a href="https://github.com/pump-io/pump.io/commit/32ad78812ed767621418b8dd57f11ce86a01b49f">32ad78</a>, and soon we'll be ripping out old code used to support these versions, as well as upgrading dependencies that have recently started requiring newer Nodes.</p>
<p>Anyone still on these versions is encouraged to upgrade as soon as possible, as Node.js upstream is no longer providing security support for them. Administrators can use the <a href="https://github.com/nodesource/distributions">NodeSource</a> packages, or they can try out our new Docker images, which use a modern Node version internally.</p>
<p>Please reach out to the <a href="https://github.com/pump-io/pump.io/wiki/Community">community</a> if you need any help making the transition. And good luck!</p>
]]></description><link>https://strugee.net/blog/2018/05/pump.io-5.1.1-docker-images-and-node-4</link><guid isPermaLink="true">https://strugee.net/blog/2018/05/pump.io-5.1.1-docker-images-and-node-4</guid><category><![CDATA[pump.io]]></category><category><![CDATA[releases]]></category><category><![CDATA[development]]></category><pubDate>Sat, 05 May 2018 20:06:18 GMT</pubDate></item><item><title><![CDATA[Winter break retrospective & spring semester goals]]></title><description><![CDATA[<p>Tonight I'll have been back at college for a full week, and I wanted to write up a little retrospective of winter break to see what I accomplished (and in particular, which <a href="https://strugee.net/blog/2017/12/winter-break-priorities-2017-18">goals</a> I completed or missed).</p>
<p>You may wish to skip directly to the <a href="https://strugee.net/blog/#executive-summary">executive summary</a>.</p>
<h1>Resolved goal: Node.js manpage PR</h1>
<p>I didn't <em>complete</em> this goal per se, but I did at least resolve it <a href="https://github.com/nodejs/node/pull/14164#issuecomment-357909699">by closing the Pull Request</a>. I felt pretty bad about it (especially because I kept saying I intended to finish it) but honestly, it became clear to me that I'd just lost the motivation to keep going with it. I would love it if this was included in Node.js core, but I just consistently have higher priorities. So rather than leave it hanging and cluttering up the Pull Requests view, I just closed it to reflect reality. I made sure not to delete the branch though, in case someone (distant future me?) wants to pick it up again.</p>
<h1>Failed goal: deal with GPG keysigning</h1>
<p>I did nothing to push this goal forward. While I made <a href="https://strugee.net/blog/2018/01/improving-gpg-security">numerous improvements to my GPG setup</a>, I did not actually sign anyone's key, which was what this goal was about. This feels unfortunate. (I also do not have access to the private key material in college, and am <em>certainly</em> not about to ask that it be shipped to me.)</p>
<h1>Partially completed goal: push Debian packaging work forward</h1>
<p>There were two components to this: <a href="https://tracker.debian.org/pkg/profanity">Profanity packaging</a> upgrades and getting the new <a href="https://github.com/strugee/filter-other-days">filter-other-days</a> packaging into Debian. I made no progress on the Profanity packaging. However, I did <a href="https://github.com/strugee/dots/commit/2b477a7079de9ff675fd4e2d22f58938ffbb7bc9">fix a misconfiguration in my <code>.reportbugrc</code></a> (which annoyingly had previously sent my incredibly detailed email about Profanity packaging to <code>/dev/null</code>) and then submitted <a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=886310">an ITP</a> (Intent To Package bug, which is a Debian thing) for filter-other-days. I then used that ITP bug number <a href="https://github.com/strugee/filter-other-days/commit/d09943c6ac4eea07720cc88596bed3594c3f4644">to fix the last <code>.deb</code> Lintian warning</a> (although see below). Then I paired with <a href="https://github.com/anjakefala">Anja</a> who is, as always, an angel, and we figured out the weirdness that is <code>dput</code> and <a href="https://mentors.debian.net/">mentors.debian.net</a>. Finally I was able to upload filter-other-days(!) BUT I was in for a rude awakening - apparently Lintian checks for <code>.deb</code>s and <code>.dsc</code>s are different. So while my binary package was Lintian-clean, my source package unfortunately wasn't. This is something I will need to work on in the weeks to come. That being said, I'm still pretty proud of what I've accomplished here! I've made significant progress on this front.</p>
<h1>Completed goal: lazymention v1</h1>
<p>One of the first things I did was ship lazymention 1.0.0 - and I wrote <a href="https://strugee.net/blog/2017/12/announcing-lazymention-elegant-outbound-webmention-for-static-sites">an announcement blog post</a> to accompany it! (In fact, I syndicated that blog post to <a href="https://news.indieweb.org/">IndieNews</a> <em>using lazymention</em>, which felt pretty damn awesome.) I got some great feedback on it from the IndieWeb community, and my <a href="https://lobste.rs/s/kip3yk/announcing_lazymention_elegant">lobste.rs submission</a> - which also got some great engagement - even made the front page, which was pretty unreal! I still have a lot more work to do with lazymention - in particular, it doesn't actually respect edits (so it'll resend Webmentions with every job submission) - but for now it works well. I'm super pleased with it, and have integrated it into my site deployment workflow. I even wrote <a href="https://github.com/strugee/ping-lazymention/">a module</a> so other people can do this, too!</p>
<h1>Failed goals: ActivityPub in pump.io core, pump.io PR review</h1>
<p>No progress on this front. I did start hacking on a <a href="https://github.com/pump-io/telemetry">telemetry server</a> which will eventually be helpful for our ActivityPub rollout, but that did not in any way <em>directly</em> help fulfill these goals. I also <a href="https://strugee.net/blog/2018/01/pump.io-5.1-stable-published-to-npm">released 5.1 stable</a>, but that's pretty routine by this point.</p>
<h1>Partially completed goal: two blog posts per week</h1>
<p>I stuck with this goal all the way up until the final week, where I didn't write any. (Although I wrote about my <a href="https://strugee.net/blog/2018/01/improving-gpg-security">GPG keys</a> around the time I actually flew back to college.) The first week, I wrote about <a href="https://strugee.net/blog/2017/12/shell-script-is-one-of-the-purest-forms-of-human-expression">my thoughts on shell script</a> and about <a href="https://strugee.net/blog/2017/12/announcing-lazymention-elegant-outbound-webmention-for-static-sites">lazymention</a>; the second, I wrote about the <a href="https://strugee.net/blog/2018/01/pump.io-5.1-stable-published-to-npm">pump.io 5.1 stable release</a> and about <a href="https://strugee.net/blog/2018/01/tell-your-pr-reviewers-theyre-wrong">talking to Pull Request reviewers if you think they're wrong</a>.</p>
<h1>Failed stretch goal: paper editing</h1>
<p>I did absolutely no editing on the paper I intend to get published (which I originally wrote for a writing class). This was a stretch goal though, so that's totally fine.</p>
<h1>Additional activity: steevie maintenance</h1>
<p>After I finally found the cable I needed, I swapped out the cable that connects steevie's motherboard with the drives' SATA ports. This seemed to significantly improve disk performance, although there are still noticeable performance problems. I'm very, <em>very</em> happy to have finally gotten this done.</p>
<h1>Additional activity: Tor relay migration from Amazon EC2 to DigitalOcean</h1>
<p>After getting some advice on <a href="https://lists.torproject.org/cgi-bin/mailman/listinfo/tor-relays">tor-relays</a>, I <em>finally</em> sat down and looked into moving my relay away from Amazon Web Services. This is because AWS bills by usage, which for a Tor relay ends up being incredibly inefficient. It turned out to actually be way easier than I thought, which only served to make me mad that I hadn't done it sooner. In any case, I now save approximately $240/year AND I can push 1000GB/month as opposed to the 10GB/month I pushed before. In the words of <a href="https://github.com/strugee/torrc/commit/8b9fe85378adc834b8b7a9953de45f508b76bc3e">the commit where I made this change</a>: "this change made possible by the fact that I'm no longer getting billed up the wazoo by Amazon Web Services." Here's a of <a href="https://atlas.torproject.org/#details/C3CFCC9B5993A6F0D1349858C598C4A78AFE51F9">a Tor Metrics graph</a> (captured today) that shows the jump:</p>
<p><img src="/images/tor-relay-graph.svg" alt="Tor Metrics graph"></p>
<p>Anyway, I'm super happy I can contribute more to the Tor network <em>and</em> save lots of money in the process. That being said I am pretty damn salty I didn't realize this in the four <em>years</em> I've been running a Tor relay.</p>
<h1>Additional activity: offandonagain.org maintenance</h1>
<p>After turning on <a href="https://nodesecurity.io/">NodeSecurity</a> monitoring for <a href="https://offandonagain.org">offandonagain.org</a>, I found out that the module that underlies it, <a href="https://github.com/strugee/node-serve-random">node-serve-random</a>, had some vulnerable dependencies. Not only did I fix this, I wrote a large test suite for the module and found (and fixed!) <a href="https://github.com/strugee/node-serve-random/blob/master/CHANGELOG.md#200---2018-01-13">several bugs</a> in the process. Writing a test suite also allowed me to turn on <a href="https://greenkeeper.io/">Greenkeeper</a> for the module, which will be a huge help to me in keeping the module up-to-date.</p>
<h1>Additional activity: Stratic work</h1>
<p>First off, I released <a href="https://github.com/straticjs/generator-stratic/blob/master/CHANGELOG.md#100-beta-7---2017-12-3">beta 7</a> of <a href="https://github.com/straticjs/generator-stratic">generator-stratic</a>! Nothing major, just some polishing stuff. Stratic is getting very close to the point where I might want to start promoting it more aggressively, or declaring it stable, and (with a <em>lot</em> of super-helpful feedback from my family) I worked on something that's super important before we get there: <a href="https://github.com/straticjs/RFCs/issues/22">a logo</a>!</p>
<p>Here are two of my favorites so far:</p>
<div class="two-image-container">
<p><img src="/images/stratic-logo-asteroid-with-pipe.svg" alt="Yellow background with a centered black file icon and a asteroid coming up from earth in the midddle and a pipe to the right"> <img src="/images/stratic-logo-rocket-with-pipe.svg" alt="Yellow background with a centered black file icon and a rocket coming up from earth in the midddle and a pipe to the right"></p>
</div>
<p>These are based off the JS logo, in case you hadn't seen it before:</p>
<p><img src="/images/js-logo.svg" alt="Black JS text in the bottom-right corner of a yellow background"></p>
<p>Anyway, I have to post another iteration in the <a href="https://github.com/straticjs/RFCs/issues/22">GitHub issue</a> based on some feedback from <a href="http://saul.pw/">Saul</a> (who I had a lovely lunch with) - he thinks I should reverse it so the pipe is on the left, so it looks like the file is coming out of the pipe. But anyway you should comment there if you have feedback!</p>
<h1>Additional activity: IndieWeb stuff</h1>
<p>I attended Homebrew Website Club in San Fransisco, which was <em>incredible</em>. I got to meet a bunch of new people, as well as say hi to <a href="http://snarfed.org/">Ryan</a> and <a href="http://tantek.com/">Tantek</a> again, which was so nice - it's always just <em>better</em> to talk in real life. Tantek said (at least if I recall correctly) that my laptop was one of the best-stickered laptops he'd ever seen, which made me feel just unbelievably special. He also gave me a <a href="http://microformats.org/">microformats</a> sticker (and helped me figure out where to put it), which I had on my old laptop and had been really missing, as well as a <a href="https://letsencrypt.org/">Let's Encrypt</a> sticker. The latter was so special I elected to put it on the inside of my laptop, which I reserve only for <em>really</em> special things (basically a <a href="https://www.recurse.com/">Recurse Center</a> refucktoring sticker and a sticker of <a href="https://github.com/SwartzCr">Noah</a> in <a href="https://www.eff.org/encrypt-the-web">this video</a>, which he handed to me like a business card the first time we met). Anyway, every time I look at the Let's Encrypt sticker I just feel so happy. I love Let's Encrypt so damn much.</p>
<p>Homebrew Website Club was super inspiring, so when I got back to where I was staying (at my mom's boyfriend's house) I started implementing an <a href="https://indieweb.org">IndieWeb</a>-style social stream for strugee.net. It still needs some polishing but is actually pretty close to being done. Who knows when I'll have time to finish it, but it's getting there! I'm so freaking excited, honestly. Also, I added proper timestamp mf2 metadata to my site, as well as a visual display for post edits, and I expanded what type of Webmentions the display code recognizes too!</p>
<!-- TODO nuke this when I actually do proper header anchors -->
<p><span id="executive-summary"></span></p>
<h1>Executive summary</h1>
<p>I resolved or completed 2 goals, partially completed 2 goals, failed 3 goals, and failed 1 stretch goal. Additionally I did significant work in 5 other areas. Out of the goals I set for myself, I completed 51% (Debian packaging work is ~2/5 complete; blog posts were written 2/3 of the time); not counting the stretch goal, I completed 61.2%. I'm pretty happy with what I got done during this period; however, while I was productive, the numbers show that I did a mediocre job sticking to my goals. In the future I should focus on making more realistic goals and then sticking to them (though not too much - it is a break, after all!).</p>
<p>Speaking of which, partway through break I felt like I was on the edge of burnout, which to me was a <em>very</em> clear sign that I was pushing myself way too hard during a time I should have been unwinding. Because of that I cut what I was doing a <em>lot</em>, which helped pretty dramatically. In fact, I think without that I wouldn't have been able to do some of the later stuff, like all the IndieWeb work. So that's another reason I have to find a way to balance sticking to goals and just relaxing (which doesn't necessarily mean not coding, just doing whatever coding I feel like in the moment) - I feel like I was pushing myself too hard to meet my goals (and then getting distracted and not meeting them) and that's what led to the feeling. Obviously there are different constraints for e.g. schoolwork; here I'm referring <em>only</em> to free time like breaks.</p>
<h1>Spring semester goals</h1>
<p>With that in mind, I want to set some very broad goals for spring semester. I may update this list as time goes on, but for now I have four overarching goals I want to accomplish (besides the usual day-to-day code maintenance stuff):</p>
<ul>
<li>Finish editing the paper I wrote last semester on freedom-respecting software and intersectionality, and get it published</li>
<li>Make <em>some</em> measurable progress on my <a href="https://github.com/strugee/draft-webpush-2fa">Push-based Two-factor Authentication IETF draft</a></li>
<li>Get access to the University of Rochester darkroom and start developing/printing photos again</li>
<li>Start pushing the University of Rochester library (and <em>maybe</em> the journalism department?) to start adopting Tor technologies</li>
</ul>
<p>I'm excited to see how it goes!</p>
]]></description><link>https://strugee.net/blog/2018/01/winter-break-retrospective</link><guid isPermaLink="true">https://strugee.net/blog/2018/01/winter-break-retrospective</guid><category><![CDATA[personal]]></category><category><![CDATA[development]]></category><category><![CDATA[blaggregator]]></category><pubDate>Tue, 23 Jan 2018 20:51:03 GMT</pubDate></item><item><title><![CDATA[pump.io 5.1 stable published to npm]]></title><description><![CDATA[<p>Last night I officially published pump.io 5.1 to npm as a stable release!</p>
<p>As I wrote in the beta announcement, this release contains a variety of improvements:</p>
<ul>
<li><a href="https://strugee.net/blog/2017/08/zero-downtime-restarts-have-landed">Zero-downtime restarts</a>, which allows administrators to seamlessly roll over to new configurations and codebases</li>
<li>The daemon now generates startup log warnings on bad configurations, including insecure <code>secret</code> values and internal parameters</li>
<li>An official <code>Dockerfile</code> is now included with the release</li>
<li>The logged-out mobile homepage's menu icon is no longer incorrectly styled as black</li>
<li>An authorization problem with SockJS connections has been fixed</li>
</ul>
<p>5.1 stable <em>does</em> include one change the beta didn't: a bump to the version of the <code>gm</code> npm package which we depend on. This bump was done as a precautionary measure, as previous versions of <code>gm</code> depended on a version of the <code>debug</code> module which was vulnerable to denial-of-service security bugs.</p>
<p>As a project, we addressed these bugs <a href="https://strugee.net/blog/2017/10/denial-of-service-security-fixes-now-available">back in October</a> when we issued security releases for all supported release branches, and at the time we confirmed that the vulnerable function wasn't used by <code>gm</code>. Today's <code>gm</code> bump does <em>not</em> constitute a security release; instead, we're just bumping the version as a precautionary measure in case we missed something in October's assessment of the situation.</p>
<p>Aside from the <code>gm</code> bump, there are (as usual) miscellaneous version bumps included in this release. We've also started tracking test suite coverage information as well as overhauled our <a href="https://pumpio.readthedocs.io/">documentation on ReadTheDocs</a>, moving most of the in-repository documentation there.</p>
<p>If you want even more details of this release, you can also check out <a href="https://github.com/pump-io/pump.io/blob/master/CHANGELOG.md#510---2018-01-05">the changelog</a>.</p>
<p>pump 5.1 is a drop-in replacement for 5.0. That means if you're using our recommended installation method and installing from npm, you can upgrade with <code>npm install -g pump.io@5.1</code>. If you have a source-based install, you should merge and/or switch to the <code>v5.1.0</code> tag. And as always, if you encounter any problems, please feel free to reach out to the <a href="https://github.com/pump-io/pump.io/wiki/Community">community</a> or <a href="https://github.com/pump-io/pump.io/issues">file bugs you find</a>.</p>
<p>Finally, I would be remiss if I didn't point out that pump.io has a <strong>brand-new announcement mailing list</strong>! While the blog is great for announcing new releases, not everyone finds it convenient to check. Also, if we issue new betas in the middle of a release cycle, these aren't typically announced on the blog. Therefore in the future <em>all</em> new releases will be announced on the mailing list, not just initial betas. If you want to subscribe to the mailing list, you may do so <a href="https://lists.strugee.net/mailman/listinfo/pumpio-announce">here</a> - you'll get announcements of new features only, not e.g. feature announcements as seen on this blog. I hope people find this service useful!</p>
]]></description><link>https://strugee.net/blog/2018/01/pump.io-5.1-stable-published-to-npm</link><guid isPermaLink="true">https://strugee.net/blog/2018/01/pump.io-5.1-stable-published-to-npm</guid><category><![CDATA[pump.io]]></category><category><![CDATA[development]]></category><category><![CDATA[releases]]></category><category><![CDATA[blaggregator]]></category><pubDate>Sat, 06 Jan 2018 04:09:43 GMT</pubDate></item><item><title><![CDATA[Announcing lazymention: elegant outbound Webmention for static sites]]></title><description><![CDATA[<p>Last night I hit publish on version 1.0.0 of a new project, <a href="https://github.com/strugee/lazymention">lazymention</a>! Whoohoo!</p>
<p>tl;dr: lazymention exists to add Webmention support to static sites!</p>
<p>To elaborate a little bit, I developed lazymention because I had a problem with this site: I wanted to send outbound <a href="https://indieweb.org/Webmention">Webmentions</a> when I link to things, but my website is completely static. (Webmention, in case you didn't know, is a way to notify another website that you linked to them, so the other website can display some UI about your reply or whatever.) The page builds happen on my local machine, not on the server. One option would be to just send Webmentions from my local machine too, but this isn't really a good solution for a couple reasons. First, I couldn't do it automatically at build-time because the built pages wouldn't have been deployed to the server yet, so receivers of my Webmentions would reject the mentions due to the source being nonexistant. That meant that I would have to have a separate step, which wouldn't really be <em>that</em> big of a deal (lazymention requires pinging a server too) except for the second reason: I would need some way to keep track of where I'd already sent Webmentions to, and that would require synchronizing across computers. Probably the only decent way to do that would be to check it into Git, but having a program's data store checked in right next to the source code just feels kinda ugly. Plus, then it can't be shared with other people as a service.</p>
<p>So instead of doing it locally, I elected to build a server instead. Here's how it works: you mark up your stuff with <a href="https://indieweb.org/h-feed"><code>h-feed</code></a> and <a href="https://indieweb.org/h-entry"><code>h-entry</code></a>, and whenever anything happens (e.g. you publish a new blog post or whatever), you ping lazymention with the URL (either the feed or the post itself). lazymention will use your microformats2 markup to find the canonical location for a given post, then it will find all the links in the post and send Webmentions for them. And presto! You've just sent Webmentions for your blog. lazymention also records when it's sent mentions, so if you ping it again, nothing will happen unless you've updated your content. I'm also planning to add <a href="https://indieweb.org/WebSub">WebSub</a> support to lazymention, too, and that'll work in the exact same way.</p>
<p>lazymention is super easy to get started with, especially because I've provided thorough documentation in the <a href="https://github.com/strugee/lazymention/blob/master/README.md">README</a>. If you find anything that's confusing or missing, please let me know by <a href="https://github.com/strugee/lazymention/issues/new">filing an issue</a>! I'd love to get it fixed. In fact, I'd be thrilled to hear about both positive <em>and</em> negative installation experiences.</p>
<p>Oh, and one more thing - lazymention is reusable in other applications. If you're writing a Node.js app and want to reuse its HTTP API, you can use its embedding API to get at the Express application and <code>Router</code> used internally. I'm not sure if people will actually find this useful, but I wrote it just for kicks anyway. See <a href="https://github.com/strugee/lazymention/blob/master/README.md#embedding">the embedding documentation</a> for more!</p>
<p>Cheers, and happy mentioning! Elegant outbound Webmention for static sites is here.</p>
]]></description><link>https://strugee.net/blog/2017/12/announcing-lazymention-elegant-outbound-webmention-for-static-sites</link><guid isPermaLink="true">https://strugee.net/blog/2017/12/announcing-lazymention-elegant-outbound-webmention-for-static-sites</guid><category><![CDATA[development]]></category><category><![CDATA[indieweb]]></category><category><![CDATA[releases]]></category><category><![CDATA[blaggregator]]></category><pubDate>Fri, 29 Dec 2017 17:52:04 GMT</pubDate></item><item><title><![CDATA[Webmention test post]]></title><description><![CDATA[<p>Once again I need to test whether <a href="https://github.com/strugee/lazymention">lazymention</a> - and more importantly, the underlying libraries (<a href="https://github.com/strugee/node-send-webmention">node-send-webmention</a> and <a href="https://github.com/strugee/node-get-webmention-url">node-get-webmention-url</a>) - complies with the <a href="https://www.w3.org/TR/webmention/">W3C spec</a>. I'll be using <a href="https://webmention.rocks/">webmention.rocks</a>, so, here's a large list of links:</p>
<p><a href="https://webmention.rocks/test/1">Test 1</a>, <a href="https://webmention.rocks/test/2">Test 2</a>, <a href="https://webmention.rocks/test/3">Test 3</a>, <a href="https://webmention.rocks/test/4">Test 4</a>, <a href="https://webmention.rocks/test/5">Test 5</a>, <a href="https://webmention.rocks/test/6">Test 6</a>, <a href="https://webmention.rocks/test/7">Test 7</a>, <a href="https://webmention.rocks/test/8">Test 8</a>, <a href="https://webmention.rocks/test/9">Test 9</a>, <a href="https://webmention.rocks/test/10">Test 10</a>, <a href="https://webmention.rocks/test/11">Test 11</a>, <a href="https://webmention.rocks/test/12">Test 12</a>, <a href="https://webmention.rocks/test/13">Test 13</a>, <a href="https://webmention.rocks/test/14">Test 14</a>, <a href="https://webmention.rocks/test/15">Test 15</a>, <a href="https://webmention.rocks/test/16">Test 16</a>, <a href="https://webmention.rocks/test/17">Test 17</a>, <a href="https://webmention.rocks/test/18">Test 18</a>, <a href="https://webmention.rocks/test/19">Test 19</a>, <a href="https://webmention.rocks/test/20">Test 20</a>, <a href="https://webmention.rocks/test/21">Test 21</a>, <a href="https://webmention.rocks/test/22">Test 22</a>, <a href="https://webmention.rocks/test/23/page">Test 23</a></p>
<p>Hopefully it works \o/</p>
]]></description><link>https://strugee.net/blog/2017/11/webmention-test-post</link><guid isPermaLink="true">https://strugee.net/blog/2017/11/webmention-test-post</guid><category><![CDATA[development]]></category><pubDate>Fri, 24 Nov 2017 20:24:46 GMT</pubDate></item><item><title><![CDATA[filter-other-days is portable to FreeBSD]]></title><description><![CDATA[<p>I'm pleased to announce <code>filter-other-days</code> 1.0.1. This is a bugfix release primarily improving portability to other Unix-like operating systems; in particular, the test suite now fully passes under FreeBSD. Specifically:</p>
<ul>
<li>Various portability bugs in the test suite itself were fixed - the test suite no longer relies on a GNU <code>date</code> (with GNU <code>date -d</code> semantics) or a fully-functional <code>/dev/fd</code> (the fallback option is named pipes), and it doesn't hardcode bash's install path as <code>/bin/bash</code></li>
<li>Some non-portable uses of <code>echo "\n"</code> which break under BSD systems were replaced with <code>printf</code> invocations</li>
<li>Travis CI now checks <code>filter-other-days</code> with Debian's <code>checkbashisms</code> script, which is run in strict mode</li>
<li>Non-portable uses of <code>test</code>'s <code>-o</code> option were caught by <code>checkbashisms</code> and replaced with <code>||</code></li>
</ul>
<p>With these changes I expect that <code>filter-other-days</code> will probably run on all major BSD distributions. I intend to confirm this hypothesis soon and have filed bugs for <a href="https://github.com/strugee/filter-other-days/issues/12">OpenBSD</a> and <a href="https://github.com/strugee/filter-other-days/issues/13">NetBSD</a>, plus <a href="https://github.com/strugee/filter-other-days/issues/14">illumos</a> just for kicks.</p>
<p>As with 1.0.0, you can clone <code>filter-other-days</code> <a href="https://github.com/strugee/filter-other-days">from GitHub</a> or you can download a (signed) <a href="https://github.com/strugee/filter-other-days/releases/tag/v1.0.1">tarball</a>. Please do <a href="https://github.com/strugee/filter-other-days/issues/new">report any bugs</a> you find in the release.</p>
<p>Enjoy!</p>
]]></description><link>https://strugee.net/blog/2017/11/filter-other-days-is-portable-to-freebsd</link><guid isPermaLink="true">https://strugee.net/blog/2017/11/filter-other-days-is-portable-to-freebsd</guid><category><![CDATA[development]]></category><category><![CDATA[releases]]></category><category><![CDATA[sysadmin]]></category><category><![CDATA[blaggregator]]></category><pubDate>Wed, 01 Nov 2017 20:39:53 GMT</pubDate></item><item><title><![CDATA[filter-other-days: Artificial Ignorance-compatible logfile date filtering]]></title><description><![CDATA[<p>I've just published version 1.0 of my latest project, <code>filter-other-days</code> - a shell script to filter logfiles for today's date in an Artificial Ignorance-compatible way.</p>
<p>If you haven't heard of <a href="http://www.ranum.com/security/computer_security/papers/ai/index.html">Artificial Ignorance</a>, it's something you should look into cause it's pretty awesome. Here's the tl;dr: it doesn't make sense to look for all the "interesting" things  in logfiles, because it's not actually possible to enumerate all the failure conditions of a system. So instead what we do is <em>throw away</em> entries that we're <em>sure</em> are just routine. Since we've gotten rid of all the uninteresting entries, whatever is left has to be interesting.</p>
<p>I find this pretty compelling, and decided to start implementing it on my Tor relay. I quickly realized that my ideal workflow would be to configure cron to send me email with a daily report of interesting log entries. However, this presented a problem: how to get just today's log entries? I wanted to be able to handle all logfiles at once instead of receiving different reports for different logs, so I had to be able to parse all logfiles in the same way. My relay runs on FreeBSD, so the logs are unstructured text files, and even worse, several daemons (like Tor itself) write timestamps in a different format - this makes parsing all logfiles at once super difficult because I couldn't just trivially <code>grep</code> for today's date since that would end up dropping legitimate entries from logfiles that formatted their timestamps differently.</p>
<p>I briefly considered trying to write a regex to match all sorts of different timestamp formats, but quickly rejected this idea as too fragile. There are a lot of moving parts in a modern operating system - what if e.g. a daemon changed its defaults about how to format timestamps? Or, more likely, what if I simply missed a particular format present in my logs? Then I'd be accidentally throwing away an entire logfile. To solve this problem, I decided to apply the same idea behind Artificial Ignorance - if I couldn't reliably, 100% match log entries from today's date, I could do the next best thing and attempt to discard all entries from <em>other</em> dates. In this case the worst that could happen is me recieving irrelevant information, and I'd be basically guaranteed to never miss an legitimate entry from today.</p>
<p><code>filter-other-days</code> is a working implementation of this design. Originally I put it with the other random scripts I keep with my <a href="https://github.com/strugee/dots/tree/master/bin">dotfiles</a>, but it quickly became obvious that it was useful as a standalone project. So I <a href="https://github.com/strugee/dots/commit/7dd7e2755c55194cdff1c7b24b24bca72581e346">extracted</a> it into its own repository, which now lives <a href="https://github.com/strugee/filter-other-days">on GitHub</a>. From there I continued to improve the script while adding a test suite and writing extensive documentation (including a Unix manpage - I always feel like a wizardly hacker when writing those things). This took, by my estimation, somewhere between 10 and 15 hours because this is actually a shockingly non-trivial problem, but mostly because regexes are hard.</p>
<p>But today I finally finished! So I'm super excited to announce that version 1.0 of <code>filter-other-days</code> is now available. You can either clone it from GitHub or download a <a href="https://github.com/strugee/filter-other-days/releases/tag/v1.0.0">tarball</a> (and the accompanying signature, if you want). It works pretty well already, but I have some ideas for future directions the project could go:</p>
<ol>
<li>Logic allowing you to actually specify the date you want to filter for, instead of assuming it's today (though you actually can already get this behavior using <code>faketime</code>; that's what the test suite does)</li>
<li>Removal of the dependency on GNU <code>seq</code> - this is, to my knowledge, the only non-POSIX requirement of <code>filter-other-days</code></li>
<li>Debian package, maybe?</li>
<li>More log formats (please <a href="https://github.com/strugee/filter-other-days/issues">report bugs</a> if you have formats <code>filter-other-days</code> doesn't recognize - which you probably do!)</li>
</ol>
<p>If you find this project useful, let me know! I'd love to hear about how people are using it. Or if it breaks (or doesn't fill your usecases), please <a href="https://github.com/strugee/filter-other-days/issues">report bugs</a> or send patches - I love those, too! Either way, may the logs be with you!</p>
]]></description><link>https://strugee.net/blog/2017/10/announcing-filter-other-days</link><guid isPermaLink="true">https://strugee.net/blog/2017/10/announcing-filter-other-days</guid><category><![CDATA[development]]></category><category><![CDATA[security]]></category><category><![CDATA[sysadmin]]></category><category><![CDATA[releases]]></category><category><![CDATA[blaggregator]]></category><pubDate>Fri, 20 Oct 2017 19:19:51 GMT</pubDate></item><item><title><![CDATA[pump.io denial-of-service security fixes now available]]></title><description><![CDATA[<p>Recently some denial-of-service vulnerabilities were discovered in various modules that pump.io indirectly depends on. I've bumped Express and <code>send</code> to pull in patched versions, and I've updated our fork of <code>connect-auth</code> to require a patched version of Connect, too. The remaining vulnerabilities I've confirmed don't affect us.</p>
<p>Because of these version bumps, I've just put out security releases which all administrators are encouraged to upgrade to as soon as possible. A semver-major release (5.0.0) was released within the past 6 months so per our <a href="https://github.com/pump-io/pump.io/wiki/Security">security support policy</a> this means there are three new releases:</p>
<ol>
<li>pump.io 5.0.2 replaces 5.0.0 and is available now on npm</li>
<li>pump.io 4.1.3 replaces 4.1.2 and is available now on npm</li>
<li>pump.io 4.0.2 will replace 4.0.1 <strike>and is currently undergoing automated testing (it'll be on npm shortly)</strike> <strong>Update:</strong> pump.io 4.0.2 is now on npm</li>
</ol>
<p>As these are security releases we encourage admins to upgrade as soon as possible. If you're on 5.0.0 installed via npm - our recommended configuration - you can upgrade by issuing:</p>
<pre><code>$ npm install -g pump.io@5
</code></pre>
<p>If you're on 4.1.3, you can upgrade by issuing:</p>
<pre><code>$ npm install -g pump.io@4
</code></pre>
<p>And when 4.0.2 is out, if you're on 4.0.1 you can upgrade by issuing:</p>
<pre><code>$ npm install -g pump.io@4.0
</code></pre>
<p>Note though that 4.1.3 is a drop-in replacement for 4.0.2, so you should consider just upgrading to that instead. Or even better, <a href="https://pumpio.readthedocs.io/en/latest/upgrades/4.x-to-5.x.html">upgrade to 5.x</a>!</p>
<p>If you don't have an npm-based install, you'll have to upgrade however you normally do. How to do this will depend on your particular setup.</p>
<p>As always, if you need help, you should get in touch with <a href="https://github.com/pump-io/pump.io/wiki/Community">the community</a>. I'd also like to specifically thank <a href="https://identi.ca/jxself">Jason Self</a>, who generously deployed a 24-hour private beta of these fixes on <a href="https://datamost.com/">Datamost</a>. One of the version bumps was ever-so-slightly risky, and being able to test things in production before rolling out patches for the entire network was invaluable. I wouldn't be as confident as I am in these releases without his help. So thanks, Jason - I really appreciate it!</p>
]]></description><link>https://strugee.net/blog/2017/10/denial-of-service-security-fixes-now-available</link><guid isPermaLink="true">https://strugee.net/blog/2017/10/denial-of-service-security-fixes-now-available</guid><category><![CDATA[pump.io]]></category><category><![CDATA[development]]></category><category><![CDATA[security]]></category><category><![CDATA[releases]]></category><category><![CDATA[blaggregator]]></category><pubDate>Sun, 01 Oct 2017 17:40:59 GMT</pubDate></item><item><title><![CDATA[How I accidentally started maintaining a social network with thousands of users]]></title><description><![CDATA[<p>As some of my readers (particularly Recursers) know, a couple of weeks ago I became an Invited Expert at the <a href="https://www.w3.org/wiki/Socialwg">Social Working Group</a> at the <a href="https://www.w3.org/">W3C</a> (World Wide Web Consortium). The W3C is a standards body. That means it's responsible for defining things like how things work on the web, such as how web pages are styled using CSS and how web developers can protect their apps from security vulnerabilities using <a href="https://www.w3.org/TR/CSP3/">Content Security Policy</a>.</p>
<p>My first thought when I got the email that my application had been accepted was, "<em><strong>WHOOOOOOOOO!</strong></em>" It was probably one of the most thrilling moments of my whole life. My second thought was, "how in the <em>world</em> did I get here!?" The truth is, it was almost an accident.</p>
<p>It started when I got involved in the <a href="http://pump.io">pump.io</a> project. pump.io, for those who haven't heard me talk about this endlessly (e.g. at RC), is a decentralized social network. That means that there can be multiple servers run by different people that are part of the social network, but the users on those servers can interact with each other in just the same way they could if it was just one big centralized server[1]. I first got involved in the pump.io project in August 2015. I was experimenting with different social networking software and decided to <a href="https://pump.strugee.net/">deploy</a> pump.io on my server. When I did I realized that pump... well, it didn't work very well. The web UI was kinda basic[2], everything was pretty buggy, and there were a lot of problems with the overall user experience. In fact, I know the exact day I set up pump.io (August 12th) because all throughout the experience <a href="https://github.com/pump-io/pump.io/issues/1093">I</a> <a href="https://github.com/pump-io/pump.io/issues/1094">was</a> <a href="https://github.com/pump-io/pump.io/issues/1095">filing</a> <a href="https://github.com/pump-io/pump.io/issues/1096">bugs</a> on things needing improvement. It was a shame, I thought, because this software seemed really neat. I thought it had a lot of potential.</p>
<p>After about two weeks it became clear that there was no activity in the upstream pump.io project. So after some deliberation, I ended up forking it (briefly). You can watch <a href="https://media.libreplanet.org/u/libreplanet/m/pump-io-the-federated-extensible-social-network/">this talk</a> around 16:00 to hear me talk about this a bit, though to be honest it's kind of just a footnote in the project's history. In the end Evan Prodromou, pump.io's author, ended up handing off some commit rights to community members.</p>
<p>Well, I thought, that was the end of that. Everything's smooth sailing from here on out! There were some big problems, though: the people who now had commit rights all were involved in other things and, more importantly, none of them knew JavaScript or Node.js! This makes me chuckle to this day, honestly.</p>
<p>So I started triaging issues. When people sent Pull Requests, I'd review them since it seemed like no one else was going to do it. <a href="https://github.com/pump-io/pump.io/pull/1114">#1114</a> was, as far as I can tell (or remember), the very first of these "unofficial" PR reviews. I kept going; I even reviewed Menno Vossen's <a href="https://github.com/pump-io/pump.io/pull/1136">epic PR which fixed all the tests</a> (fixing the tests being a feat which, having tried to start that work myself, I am to this day in awe of and <em>incredibly</em> thankful for). For that last one in particular, you'll note that <em>I</em> merged it, not Chris Webber. At some point in January(?), he asked me in <code>#pump.io</code> on IRC if I'd like write access to the repository, to which I said (paraphrased) "heck yes!" So he made it happen.</p>
<p>I never really intended for that to happen. However, I <em>was</em> the one doing almost all of the work. After a while it just made sense. This is what, among other things, I find so incredible about freedom-respecting software: you can just <em>do</em> things. I didn't ask anyone for permission to do those reviews. I just saw the need for a reviewer, and decided I'd help out.</p>
<p>Fast-forward to today, and I'm now an owner of the pump.io organization on GitHub. I make technical decisions about what to prioritize and what should go into pump.io core. I do a lot of the day-to-day work running the project, too, and setting up technical and policy infrastructure (with a lot of help from the community, of course, plus input from Evan). That, too, just made sense, as did my becoming an Invited Expert - I was pretty deeply engaged with the SocialWG's <a href="https://www.w3.org/TR/activitypub/">ActivityPub</a> specification already since it's based on the pump.io protocol, and I was really excited about said protocol being standardized. So I was participating pretty heavily and I think it just made sense to people in the Working Group for me to join. In fact, that also kinda happened by accident. I couldn't get edit access to the W3C wiki so we were speculating in <code>#social</code> on the W3C IRC server that it might be because I wasn't a "W3C member" or something. So some people at W3C were pinging the sysops team, etc., trying to mark me as a "trusted" user when someone - <a href="https://www.w3.org/People/Sandro/">Sandro Hawke</a>, I believe - said, "the other option is for you to just join the Working Group." To which I said, "well, but I'd have to join as an Invited Expert, and I don't think I qualify as an expert." Chris Webber's response? "You're just as much of an expert as me when I joined!"</p>
<p>tl;dr how in the world did I get here? I tried some software and got annoyed at it, so I just kind of <em>"did some stuff"</em> that led to me doing code reviews. That led to me getting involved in the decentralized social web which led to me <em>"doing some more stuff"</em> that got me involved in standards. Then because of that, I tried to edit a wiki and ended up being invited to apply as a W3C Invited Expert.</p>
<p>I mean, what the hell? Honestly. I can't emphasize enough that I didn't plan ANY of this. It just sort of... happened. And that, I think, is what's so cool about the free software community. It isn't about who you are, where you come from, or what your goals are. It's only about, do you show up? Do you show up and do awesome stuff?</p>
<p>I showed up, kind of by accident, and I now run a decentralized social network with thousands of users called pump.io.</p>
<p>What will happen if <em>you</em> show up?</p>
<p><em>Thanks so much to <a href="https://github.com/anjakefala">Anja</a> and <a href="http://jvns.ca/">Julia</a> for providing feedback on a draft version of this post.</em></p>
<p>[1]: I really hope this explanation makes sense and if it doesn't, I apologize - I use diagrams to explain this in real life.</p>
<p> [2]: Still is, but that should improve now that the technical debt work I've been focusing on for the past year is now <a href="https://strugee.net/blog/2017/03/express-4.x-in-pump.io-core">basically done</a>!</p>
]]></description><link>https://strugee.net/blog/2017/05/pump.io-accident</link><guid isPermaLink="true">https://strugee.net/blog/2017/05/pump.io-accident</guid><category><![CDATA[development]]></category><category><![CDATA[personal]]></category><category><![CDATA[pump.io]]></category><pubDate>Fri, 12 May 2017 19:51:53 GMT</pubDate></item><item><title><![CDATA[pump.io 4.0 in beta]]></title><description><![CDATA[<p>pump.io 4.0.0 is officially in beta! Whooo!</p>
<h1>Highlights</h1>
<p>This is a positively <em>huge</em> release, and I'm so excited to share it with the community. Some highlights:</p>
<ul>
<li>Express 4.x - I wrote about the significance of this change <a href="http://pump.io/blog/2017/03/express-4.x-in-pump.io-core">here</a>, but suffice to say that this significantly improves security, performance, and future maintainability</li>
<li>Performance and correctness improvements to the web UI's JavaScript</li>
<li>Better administrative experience, including the ability to specify configuration via environment variables</li>
<li>Better interoperability with the <a href="https://indieweb.org">IndieWeb</a></li>
</ul>
<h1>Upgrading</h1>
<p>The upgrade to Express 4.x and the improvements to configuration loading have the potential to break <em>some</em> existing pump.io installations, although 95% of installs should be completely unaffected. If you want to help test this beta, please set aside extra time as necessary to perform this upgrade - full documentation can be found on <a href="https://pumpio.readthedocs.io/en/latest/upgrades/3.x-to-4.x.html">ReadTheDocs</a>.</p>
<p>As always, this release will follow our normal <a href="https://github.com/pump-io/pump.io/wiki/Release-cycle">release cycle</a>, which means that the stable 4.0.0 release will go out in about a month.</p>
<h1>Test days</h1>
<p>Due to the complexity of this upgrade, we've decided to have some test days during the beta where we upgrade prominent nodes for a day, then downgrade them again. This will help expose problems earlier and make the upgrade smoother for everyone. So far Jason Self, who runs <a href="https://datamost.com/">Datamost</a>, has volunteered for this - if you're interested in joining him, please <a href="https://github.com/pump-io/pump.io/wiki/Community">get in touch</a>!</p>
<p>Happy hacking!</p>
]]></description><link>https://strugee.net/blog/2017/04/pump.io-4.0-in-beta</link><guid isPermaLink="true">https://strugee.net/blog/2017/04/pump.io-4.0-in-beta</guid><category><![CDATA[pump.io]]></category><category><![CDATA[development]]></category><category><![CDATA[releases]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 03 Apr 2017 17:03:10 GMT</pubDate></item><item><title><![CDATA[Getting on board with configuration management]]></title><description><![CDATA[<p>For a long while I've really disliked configuration management. This mostly stemmed from my experience <a href="https://github.com/strugee/steevie/blob/3069f53ee82c6b1709f22285b71ccdc0e5e0bced/apache-config/apache-config.pp">managing Apache via Puppet</a>, which I found indirect and unnecessary - the only reason I did this was basically to get version control. In fact, I even started a project called <a href="https://github.com/strugee/bindslash">bindslash</a> which I literally described as "not configuration management".</p>
<p>However, last Thursday, steevie (my primary server) crashed <em>again</em>. So I went into a fallback DigitalOcean VM I'd set up the last time this had happened and updated stuff. I presented my <a href="https://strugee.net/presentation-pumpio/libreplanet/">LibrePlanet slides</a> from that. And eventually I bit the bullet and set up a secondary email server which, to my great surprise, has not received a flood of spam yet (though I'm sure it will at some point).</p>
<p>The whole ordeal really made me understand the benefit of configuration management. I would've spent less time and been less stressed if I could just plug in a config management system to get a useful failover system. So as of today, I'm on board with configuration management, and bindslash is dead.</p>
<p>I still kinda hate Puppet, so I think I'll try out Ansible and <em>maybe</em> Chef. Ansible's agentless model in particular probably makes a lot of sense for my needs. It also makes me sad to kill bindslash, since I still think it would be a useful project and there's definitely a place for it in the world. But I no longer have any reason to work on it, so I'm just going to stop pretending I'll ever finish it. If anyone is interested in that approach, talk to me and I'll happily give you the name, the repo, my thoughts on its design, etc.</p>
<p>Anyway. Now to set up outbound mail on the failover VM.</p>
<p>*big sigh*</p>
]]></description><link>https://strugee.net/blog/2017/03/getting-on-board-with-configuration-management</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/getting-on-board-with-configuration-management</guid><category><![CDATA[development]]></category><category><![CDATA[sysadmin]]></category><category><![CDATA[blaggregator]]></category><pubDate>Tue, 28 Mar 2017 16:59:56 GMT</pubDate></item><item><title><![CDATA[Express 4.x in pump.io core]]></title><description><![CDATA[<p>So I thought I'd take a moment to announce that the upgrade from Express 2.x to Express 4.x is <a href="https://github.com/pump-io/pump.io/pull/1208">finally complete</a>! I fixed up the last couple test failures last Wednesday, and the branch got merged on Thursday.</p>
<h1>A long time coming</h1>
<p>Believe it or not, the work to do this upgrade started almost an entire <em>year</em> ago. Express 2.x has been outdated and unmaintained for a long time now, so upgrading has been a high priority. However, it wasn't as simple as adjusting a version number - there were a staggering number of changes that needed to be made due to Express deprecating, removing, and changing things around. One of the most significant problems was the fact that the old template system that we used, utml, was not compatible with Express 3.x and above. That meant that we had to rewrite every single template into a modern language - an effort that resulted in <a href="https://github.com/pump-io/pump.io/pull/1170">over a thousand lines changed</a>!</p>
<p>However, the time for Express 4.x has finally arrived. With that and some other trivial version bumps, I'm proud to announce that pump.io is fully up-to-date in terms of dependencies with only three, non-critical exceptions. Whooooo!</p>
<h1>Immediate benefits</h1>
<p>There are a lot of reasons this is immediately awesome:</p>
<ol>
<li>Express 4.x fixes significant performance problems that existed in Express 3.x</li>
<li>Relatedly, Express 4.x fixes some security problems present in 3.x</li>
<li>The fact that our dependencies are <em>finally</em> up-to-date means that we can (and do!) now make use of <a href="https://greenkeeper.io/">Greenkeeper</a> and the <a href="https://nodesecurity.io/orgs/pumpio/projects/32213bb8-f9a6-4dd0-8fc6-5caa8ea5f8fc">Node Security Platform</a> to automatically track dependencies to make sure they're up-to-date and not introducing security vulnerabilities</li>
</ol>
<p>That last one is particularly significant. Greenkeeper and NSP will continuously monitor the project's dependencies and automate away a lot of the pain that's associated with keeping pump.io up-to-date. Everyone will get a more secure and stable codebase because of this setup.</p>
<h1>Looking forward</h1>
<p>The Express 4.x upgrade is a big change, and it's definitely possible that stuff has broken. We want to make sure that breakage doesn't make it into production. This change went into pump.io 4.0, which will go through our normal <a href="https://github.com/pump-io/pump.io/wiki/Release-cycle">release cycle</a>. That means it'll be in beta for a month before being released. As a part of that, <a href="https://jxself.org/">Jason Self</a> - who's kind enough to administer <a href="https://datamost.com/">Datamost</a> - has agreed to have a test day where Datamost upgrades to the beta for a day, then downgrade it again. This test day will give us much wider exposure than we would've gotten otherwise, which will be incredibly valuable feedback in the effort to identify and fix regressions. We haven't set a date yet, but if you'd like to join Jason in helping us find bugs, please get in touch with <a href="https://github.com/pump-io/pump.io/wiki/Community">the community</a>. We'd love your help.</p>
<p>Beyond the immediate release, though, there's still things to look forward to. Express 4.x gives us a better way to structure routing code, and a refactor to use this structure <a href="https://github.com/pump-io/pump.io/issues/1232">is planned</a>. There's a lot of room for improvement. But really, the most important benefit is this: technical debt is a far less pressing issue than before. That means that we can shift focus and spend more time fixing user-facing bugs, adding useful features, and generally improving the experience for our users. I couldn't be more excited.</p>
]]></description><link>https://strugee.net/blog/2017/03/express-4.x-in-pump.io-core</link><guid isPermaLink="true">https://strugee.net/blog/2017/03/express-4.x-in-pump.io-core</guid><category><![CDATA[pump.io]]></category><category><![CDATA[development]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 20 Mar 2017 16:22:27 GMT</pubDate></item></channel></rss>