<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[strugee.net blog - 2019]]></title><description><![CDATA[strugee.net blog - 2019]]></description><link>https://strugee.net/blog/2019</link><generator>stratic-indexes-to-rss</generator><lastBuildDate>Tue, 28 Apr 2020 05:10:06 GMT</lastBuildDate><atom:link href="https://strugee.net/blog/2019/index.rss" rel="self" type="application/rss+xml"/><copyright><![CDATA[Â© Copyright 2012-2018 AJ Jordan. Available under the GNU Affero GPL.]]></copyright><webMaster><![CDATA[AJ Jordan <alex@strugee.net>]]></webMaster><item><title><![CDATA[filter-other-days 1.1.0 and 2.0.0 are now available]]></title><description><![CDATA[<p>I'm pleased to announce that <code>filter-other-days</code> 1.1.0 and 2.0.0 are now available. In fact, they were both released simultaneously over three weeks ago while I was at <a href="https://seagl.org/">SeaGL</a>, but things at college have been so hectic I'm only just finding time to write about them! If you're not already familiar with <code>filter-other-days</code> - which provides reliable, Artificial Ignorance-compatible logfile date filtering even in the face of unknown formats - I would encourage you to read my blog post <a href="https://strugee.net/blog/2017/10/announcing-filter-other-days">introducing the tool for the first time</a>. Or, if you read this post late enough, you could even watch video of the <a href="https://osem.seagl.org/conferences/seagl2019/program/proposals/682">talk I gave at SeaGL</a>, which talks about <code>filter-other-days</code> before pivoting into a broader discussion of the kind of runaway complexity <code>filter-other-days</code> is designed to address.</p>
<p>1.1.0 and 2.0.0 are both feature releases. Due to <code>filter-other-days</code> 2.0.0 breaking compatibility with OpenBSD, I'm providing 1.1.0 which contains everything that <code>filter-other-days</code> 2.0.0 does <em>except</em> for the feature that breaks OpenBSD support - localization in the logfile filters. (Localization does not and to my knowledge cannot work on OpenBSD because OpenBSD does not support the POSIX features that <code>filter-other-days</code>' localization relies on.)</p>
<p>Here are the highlights of the engineering that both 1.1.0 and 2.0.0 share:</p>
<ul>
<li><code>filter-other-days -d</code> operates on any day instead of the current date on supported systems</li>
<li><code>filter-other-days</code> is portable to OpenBSD, NetBSD, OpenIndiana and OmniOS (i.e. illumos), and Cygwin</li>
<li>GNU <code>seq</code> is no longer required; the only requirement for core functionality is now POSIX</li>
<li>Several bugs have been fixed</li>
<li>Release artifacts are built <a href="https://reproducible-builds.org/">reproducibly</a></li>
<li>Automated testing has been improved</li>
</ul>
<p>Note that <code>filter-other-days -d</code> <em>does</em> require more than POSIX - it needs a system with either GNU <code>date -d</code> semantics or BSD <code>date -r</code> semantics. This is because POSIX does not provide enough support to implement this feature otherwise. If your system does not support either of these, <code>filter-other-days</code> will simply turn the feature off. You can check if <code>-d</code> is available by looking for it in the help output - it will show up only if the system supports it.</p>
<p>In addition to the above, <code>filter-other-days</code> 2.0.0 <em>also</em> includes support for filtering logfiles in different locales. This means that if your system logs things like month names in languages other than English, <code>filter-other-days</code> will now be able to process these logs! <code>filter-other-days</code> will automatically use the C locale (which is mandated to be available by POSIX) and will additionally use the locale defined by the <code>$LANG</code> environment variable, if set. You can also specify more locales to be loaded by specifiying the <code>-l</code> command line flag. <code>filter-other-days</code> extracts the information it needs using specific keywords in the system locales, which means that if you want <code>filter-other-days</code> to load a particular locale to filter with, you need to have that locale installed.</p>
<p>Unfortunately, there's one more complication: some systems are buggy and do not have keywords that properly conform to POSIX. <a href="https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=237752">FreeBSD 12.0 and below</a> as well as <a href="https://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=54693">NetBSD</a> are known to have these bugs. Since these systems are relatively popular, I am providing patched versions of <code>filter-other-days</code> that will work around these bugs. You can recognize these versions because they have <code>freebsd</code> in the tarball filename. They will also tell you they've been patched for FreeBSD (and NetBSD) in all relevant places, like the version output and the manpage.</p>
<p>So, to summarize what version to use:</p>
<ul>
<li>If you're on OpenBSD, use 1.1.0</li>
<li>If you're on FreeBSD 12.0 or below, or on NetBSD, use 2.0.0 with FreeBSD patches</li>
<li>Otherwise, use the unpatched 2.0.0 tarballs</li>
</ul>
<p>I hope these releases of <code>filter-other-days</code> are useful to people! I'm super proud of them and I couldn't be more excited for people to try them out. And as always, feel free to <a href="https://github.com/strugee/filter-other-days/issues">report any bugs</a> you find!</p>
]]></description><link>https://strugee.net/blog/2019/12/filter-other-days-1.1.0-and-2.0.0-are-now-available</link><guid isPermaLink="true">https://strugee.net/blog/2019/12/filter-other-days-1.1.0-and-2.0.0-are-now-available</guid><category><![CDATA[development]]></category><category><![CDATA[releases]]></category><category><![CDATA[sysadmin]]></category><category><![CDATA[blaggregator]]></category><pubDate>Wed, 11 Dec 2019 17:45:24 GMT</pubDate></item><item><title><![CDATA[pump.io DOMPurify security fixes available]]></title><description><![CDATA[<p>Recently the cross-site-scripting sanitization library that pump.io uses, <a href="https://github.com/cure53/DOMPurify">DOMPurify</a>, published several security advisories for mXSS vulnerabilities affecting browsers based on the Blink rendering engine - you can find the latest one, for example, <a href="https://lists.ruhr-uni-bochum.de/pipermail/dompurify-security/2019-October/000012.html">here</a>. As we've done in the past, the pump.io project is publishing security releases to ensure that everyone is using the latest version of DOMPurify. Per our <a href="https://github.com/pump-io/pump.io/wiki/Security">security support policy</a>, we are providing patches for the current stable release and the previous stable release:</p>
<ol>
<li>pump.io 5.1.2 has been updated to pump.io 5.1.3</li>
<li>pump.io 5.0.2 has been updated to pump.io 5.0.3</li>
</ol>
<p>As these are security releases we encourage administrators to upgrade as soon as possible. Both 5.1.3 and 5.0.3 are drop-in replacements for their predecessors. If you have pump.io 5.1 installed via npm - our recommended configuration - you can upgrade with:</p>
<pre><code>$ npm install -g pump.io@5
</code></pre>
<p>If you're on pump.io 5.0, we recommend that you also run the above command to upgrade to 5.1 - it's a drop-in replacement for 5.0. However, if you want to stick with 5.0 for the time being, you can install a patched version with:</p>
<pre><code>$ npm install -g pump.io@5.0
</code></pre>
<p>Note that if you have a source-based install, the above commands won't work and you will need to upgrade however you usually do - this will depend on how exactly you have pump.io set up.</p>
<p>If you need help, or if you have questions about these security releases, get in touch with <a href="https://github.com/pump-io/pump.io/wiki/Community">the community</a>.</p>
]]></description><link>https://strugee.net/blog/2019/10/pump.io-dompurify-security-fixes-available</link><guid isPermaLink="true">https://strugee.net/blog/2019/10/pump.io-dompurify-security-fixes-available</guid><category><![CDATA[pump.io]]></category><category><![CDATA[development]]></category><category><![CDATA[security]]></category><category><![CDATA[releases]]></category><category><![CDATA[blaggregator]]></category><pubDate>Tue, 15 Oct 2019 18:28:01 GMT</pubDate></item><item><title><![CDATA[Make ReCaptcha's "I'm not a robot" accurate]]></title><description><![CDATA[<p>A month or two ago, my friend Evan <a href="https://twitter.com/evanpro/status/1098367574969077761">tweeted</a>:</p>
<blockquote>
<p>Fuck reCaptcha.</p>
<p>I am sick of doing unpaid labour classifying images for Google.</p>
<p>We need a captcha widget that contributes to the global commons instead of siphoning value into yet another proprietary lockbox.</p>
</blockquote>
<p>Frankly I agree. Not only am I being forced to do Google's dirty work, but ReCaptcha is known to make life extremely difficult for Tor users. I've literally spent 15 minutes before trying to solve a stupid captcha and eventually I gave up because Google just wouldn't let me past. ReCaptcha profits off of innocent users who are just trying to go about their business on the web, and Google is exploiting people in order to build a locked-up, proprietary image recognition system. Why are we, the users, not allowed to have access to the fruits of the labor that we are forced to provide for free? Because of this, today I am announcing an advanced, next-generation, cutting-edge platform that is poised to <em>revolutionize</em> this problem space.</p>
<p>Nah, just kidding (mostly). Inspired by <a href="https://twitter.com/evanpro/status/1098987608020008961">another tweet from Evan</a>, I threw together a browser extension in like 30 minutes that changes "I'm not a robot" to "I want to do unpaid image classification". After a long exchange with the fine folks behind addons.mozilla.org (because my account is so old that when I logged in I hit <a href="https://github.com/mozilla/addons-server/issues/8765">this bug</a> and got 500 Internal Server Error), I've finally sorted out my logins, and today I've uploaded the latest version of this extension to both addons.mozilla.org and the Chrome Web Store. So at least if you're getting screwed by Google, you'll be able to make them be honest about how they're screwing you. Here's a screenshot:</p>
<p><img src="/images/recaptcha-screenshot.jpg" alt="Screenshot of a test page with Google ReCaptcha on it; &quot;I'm not a robot&quot; has been replaced with &quot;I would like to do unpaid image classification&quot;"></p>
<p>Also, for some extra irony, I took the icon from Google's Apache 2.0-licensed <a href="https://material.io/tools/icons/?search=image_search&amp;icon=image_search&amp;style=baseline">Material Design icon set</a>. If someone feels like contributing a real icon, I would probably replace the current icon with it. (I would also be happy to take translations into different languages!)</p>
<p>In the words of the README:</p>
<blockquote>
<p>This was Evan Prodromou's idea unless you like it, in which case the idea to follow through and make an actual extension was totally all mine.</p>
</blockquote>
<p>I hope people enjoy this extension! <em>Make ReCaptcha's "I'm not a robot" accurate</em> is available as a <a href="https://addons.mozilla.org/en-US/firefox/addon/make-recaptcha-text-accurate/">Firefox extension</a> and as a <a href="https://chrome.google.com/webstore/detail/make-recaptchas-im-not-a/olbjmgkbokabjfaelgogjjllpnfjgdoe">Chrome extension</a>, and the source is published <a href="https://github.com/strugee/recaptcha-unpaid-labor">on GitHub</a>.</p>
]]></description><link>https://strugee.net/blog/2019/04/make-recaptchas-im-not-a-robot-accurate</link><guid isPermaLink="true">https://strugee.net/blog/2019/04/make-recaptchas-im-not-a-robot-accurate</guid><category><![CDATA[development]]></category><category><![CDATA[blaggregator]]></category><pubDate>Sat, 20 Apr 2019 22:05:58 GMT</pubDate></item></channel></rss>